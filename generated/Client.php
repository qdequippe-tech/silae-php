<?php

namespace QdequippeTech\Silae\Api;

use Psr\Http\Message\ResponseInterface;
use QdequippeTech\Silae\Api\Exception\SalarieSupprimerAbsenceBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieSupprimerAbsenceUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieSupprimerAbsenceInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieSupprimerAbsenceRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieSupprimerAbsence;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterAbsenceBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterAbsenceUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterAbsenceInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterAbsenceRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterAbsence;
use QdequippeTech\Silae\Api\Exception\SalarieModifierAbsenceBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieModifierAbsenceUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieModifierAbsenceInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieModifierAbsenceRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieModifierAbsence;
use QdequippeTech\Silae\Api\Model\SalarieAbsencesResponse;
use QdequippeTech\Silae\Api\Exception\SalarieAbsencesBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAbsencesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAbsencesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAbsencesRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAbsences;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterHeuresRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterHeures;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresSurEmploiBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresSurEmploiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresSurEmploiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterHeuresSurEmploiRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterHeuresSurEmploi;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterActiviteJournaliereBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterActiviteJournaliereUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterActiviteJournaliereInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterActiviteJournaliereRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterActiviteJournaliere;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterActiviteJournaliereSurEmploiBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterActiviteJournaliereSurEmploiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterActiviteJournaliereSurEmploiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterActiviteJournaliereSurEmploiRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterActiviteJournaliereSurEmploi;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresNativesBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresNativesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresNativesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterHeuresNativesRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterHeuresNatives;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresNativesSurEmploiBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresNativesSurEmploiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterHeuresNativesSurEmploiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterHeuresNativesSurEmploiRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterHeuresNativesSurEmploi;
use QdequippeTech\Silae\Api\Model\SalarieReinitialiserSaisiesResponse;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserSaisiesBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserSaisiesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserSaisiesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieReinitialiserSaisiesRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieReinitialiserSaisies;
use QdequippeTech\Silae\Api\Model\ListeAgencesResponse;
use QdequippeTech\Silae\Api\Exception\ListeAgencesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeAgencesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeAgencesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeAgences;
use QdequippeTech\Silae\Api\Model\ListeDossiersAgenceResponse;
use QdequippeTech\Silae\Api\Exception\ListeDossiersAgenceBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeDossiersAgenceUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeDossiersAgenceInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ListeDossiersAgenceRequest;
use QdequippeTech\Silae\Api\Endpoint\ListeDossiersAgence;
use QdequippeTech\Silae\Api\Model\AgenceDetail;
use QdequippeTech\Silae\Api\Exception\LectureFicheAgenceBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureFicheAgenceUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureFicheAgenceInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureFicheAgenceRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureFicheAgence;
use QdequippeTech\Silae\Api\Exception\AffectationDossierPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\AffectationDossierPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AffectationDossierPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AffectationDossierPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\AffectationDossierPaie;
use QdequippeTech\Silae\Api\Model\AffectationDossierPaieLectureResponse;
use QdequippeTech\Silae\Api\Exception\AffectationDossierPaieLectureBadRequestException;
use QdequippeTech\Silae\Api\Exception\AffectationDossierPaieLectureUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AffectationDossierPaieLectureInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\DossierRequest;
use QdequippeTech\Silae\Api\Endpoint\AffectationDossierPaieLecture;
use QdequippeTech\Silae\Api\Model\UtilisateurCollaborateur;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurLectureBadRequestException;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurLectureUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurLectureInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AdministrationCollaborateurLectureRequest;
use QdequippeTech\Silae\Api\Endpoint\AdministrationCollaborateurLecture;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurLectureParIdentifiantBadRequestException;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurLectureParIdentifiantUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurLectureParIdentifiantInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AdministrationCollaborateurLectureParIdentifiantRequest;
use QdequippeTech\Silae\Api\Endpoint\AdministrationCollaborateurLectureParIdentifiant;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurEnregistrementBadRequestException;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurEnregistrementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AdministrationCollaborateurEnregistrementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AdministrationCollaborateurEnregistrementRequest;
use QdequippeTech\Silae\Api\Endpoint\AdministrationCollaborateurEnregistrement;
use QdequippeTech\Silae\Api\Exception\ModificationDroitsFonctionnelsProductionPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationDroitsFonctionnelsProductionPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationDroitsFonctionnelsProductionPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationDroitsFonctionnelsProductionPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationDroitsFonctionnelsProductionPaie;
use QdequippeTech\Silae\Api\Model\CompteCollaborateur;
use QdequippeTech\Silae\Api\Exception\LectureCompteCollaborateurBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureCompteCollaborateurUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureCompteCollaborateurInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureCompteCollaborateurRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureCompteCollaborateur;
use QdequippeTech\Silae\Api\Exception\CreationCompteCollaborateurBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationCompteCollaborateurUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationCompteCollaborateurInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationCompteCollaborateurRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationCompteCollaborateur;
use QdequippeTech\Silae\Api\Exception\AffecterCleDossierBadRequestException;
use QdequippeTech\Silae\Api\Exception\AffecterCleDossierUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AffecterCleDossierInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AffecterCleDossierRequest;
use QdequippeTech\Silae\Api\Endpoint\AffecterCleDossier;
use QdequippeTech\Silae\Api\Exception\GererEtatDossierPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\GererEtatDossierPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\GererEtatDossierPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\GererEtatDossierPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\GererEtatDossierPaie;
use QdequippeTech\Silae\Api\Exception\GererEtatRobotDePaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\GererEtatRobotDePaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\GererEtatRobotDePaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\GererEtatRobotDePaieRequest;
use QdequippeTech\Silae\Api\Endpoint\GererEtatRobotDePaie;
use QdequippeTech\Silae\Api\Exception\GererCycleDePaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\GererCycleDePaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\GererCycleDePaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\GererCycleDePaieRequest;
use QdequippeTech\Silae\Api\Endpoint\GererCycleDePaie;
use QdequippeTech\Silae\Api\Model\ListeDossiersDemoSilaeResponse;
use QdequippeTech\Silae\Api\Exception\ListeDossiersDemoSilaeBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeDossiersDemoSilaeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeDossiersDemoSilaeInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeDossiersDemoSilae;
use QdequippeTech\Silae\Api\Model\TraitementAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\ImportDossierDemoAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\ImportDossierDemoAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ImportDossierDemoAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ImportDossierDemoRequest;
use QdequippeTech\Silae\Api\Endpoint\ImportDossierDemoAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutImportDossierDemoAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutImportDossierDemoAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutImportDossierDemoAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutImportDossierDemoAsynchrone;
use QdequippeTech\Silae\Api\Model\AnalyseConfigurationAccesApiResponse;
use QdequippeTech\Silae\Api\Exception\AnalyseConfigurationAccesApiBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseConfigurationAccesApiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseConfigurationAccesApiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AnalyseConfigurationAccesApiRequest;
use QdequippeTech\Silae\Api\Endpoint\AnalyseConfigurationAccesApi;
use QdequippeTech\Silae\Api\Model\CreationConfigurationAccesApi;
use QdequippeTech\Silae\Api\Exception\CreationConfigurationAccesApiBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationConfigurationAccesApiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationConfigurationAccesApiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationConfigurationAccesApiRequest;
use QdequippeTech\Silae\Api\Model\ListeComptesApiResponse;
use QdequippeTech\Silae\Api\Exception\ListeComptesApiBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeComptesApiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeComptesApiInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeComptesApi;
use QdequippeTech\Silae\Api\Model\Domain;
use QdequippeTech\Silae\Api\Exception\DomainesBadRequestException;
use QdequippeTech\Silae\Api\Exception\DomainesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\DomainesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\Domaines;
use QdequippeTech\Silae\Api\Model\Entity;
use QdequippeTech\Silae\Api\Exception\EntitesBadRequestException;
use QdequippeTech\Silae\Api\Exception\EntitesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EntitesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\Entites;
use QdequippeTech\Silae\Api\Model\Agency;
use QdequippeTech\Silae\Api\Exception\AgenciesBadRequestException;
use QdequippeTech\Silae\Api\Exception\AgenciesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AgenciesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\Agencies;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieResponse;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\AnalyseProductionPaie;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\AnalyseProductionPaieAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutAnalyseProductionPaieAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutAnalyseProductionPaieAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutAnalyseProductionPaieAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutAnalyseProductionPaieAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutAnalyseProductionPaieAsynchrone;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieDetailResponse;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieDetailBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieDetailUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieDetailInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieDetailRequest;
use QdequippeTech\Silae\Api\Endpoint\AnalyseProductionPaieDetail;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieUtilisateursResponse;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieUtilisateursBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieUtilisateursUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieUtilisateursInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieUtilisateursRequest;
use QdequippeTech\Silae\Api\Endpoint\AnalyseProductionPaieUtilisateurs;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieEntreesSortiesResponse;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieEntreesSortiesBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieEntreesSortiesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieEntreesSortiesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AnalyseProductionPaieEntreesSortiesRequest;
use QdequippeTech\Silae\Api\Endpoint\AnalyseProductionPaieEntreesSorties;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieEntreesSortiesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieEntreesSortiesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AnalyseProductionPaieEntreesSortiesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\AnalyseProductionPaieEntreesSortiesAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutAnalyseProductionPaieEntreesSortiesAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutAnalyseProductionPaieEntreesSortiesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutAnalyseProductionPaieEntreesSortiesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutAnalyseProductionPaieEntreesSortiesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutAnalyseProductionPaieEntreesSortiesAsynchrone;
use QdequippeTech\Silae\Api\Model\BureautiquePaieNombreDocumentsCreesResponse;
use QdequippeTech\Silae\Api\Exception\BureautiquePaieNombreDocumentsCreesBadRequestException;
use QdequippeTech\Silae\Api\Exception\BureautiquePaieNombreDocumentsCreesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\BureautiquePaieNombreDocumentsCreesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\BureautiquePaieNombreDocumentsCreesRequest;
use QdequippeTech\Silae\Api\Endpoint\BureautiquePaieNombreDocumentsCrees;
use QdequippeTech\Silae\Api\Model\ListeModulesActifsResponse;
use QdequippeTech\Silae\Api\Exception\ListeModulesActifsBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeModulesActifsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeModulesActifsInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeModulesActifs;
use QdequippeTech\Silae\Api\Model\LectureAxesAnalytiquesResponse;
use QdequippeTech\Silae\Api\Exception\LectureAxesAnalytiquesBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureAxesAnalytiquesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureAxesAnalytiquesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureAxesAnalytiques;
use QdequippeTech\Silae\Api\Exception\AjoutSousCategorieAxeAnalytiqueBadRequestException;
use QdequippeTech\Silae\Api\Exception\AjoutSousCategorieAxeAnalytiqueUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AjoutSousCategorieAxeAnalytiqueInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AjoutSousCategorieAxeAnalytiqueRequest;
use QdequippeTech\Silae\Api\Endpoint\AjoutSousCategorieAxeAnalytique;
use QdequippeTech\Silae\Api\Model\LectureAxesAnalytiquesSalariesResponse;
use QdequippeTech\Silae\Api\Exception\LectureAxesAnalytiquesSalariesBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureAxesAnalytiquesSalariesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureAxesAnalytiquesSalariesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureAxesAnalytiquesSalariesRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureAxesAnalytiquesSalaries;
use QdequippeTech\Silae\Api\Model\EmploiClassificationMetier;
use QdequippeTech\Silae\Api\Exception\SalarieEmploiClassificationMetierBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieEmploiClassificationMetierUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieEmploiClassificationMetierInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieEmploiClassificationMetierRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieEmploiClassificationMetier;
use QdequippeTech\Silae\Api\Model\ClassificationMetierCompleteResponse;
use QdequippeTech\Silae\Api\Exception\ClassificationMetierCompleteBadRequestException;
use QdequippeTech\Silae\Api\Exception\ClassificationMetierCompleteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ClassificationMetierCompleteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ClassificationMetierCompleteRequest;
use QdequippeTech\Silae\Api\Endpoint\ClassificationMetierComplete;
use QdequippeTech\Silae\Api\Exception\AjouteCompteRenduEdiBadRequestException;
use QdequippeTech\Silae\Api\Exception\AjouteCompteRenduEdiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AjouteCompteRenduEdiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AjouteCompteRenduEdiRequest;
use QdequippeTech\Silae\Api\Endpoint\AjouteCompteRenduEdi;
use QdequippeTech\Silae\Api\Model\AjouteCompteRenduEdi94Response;
use QdequippeTech\Silae\Api\Exception\AjouteCompteRenduEdi94BadRequestException;
use QdequippeTech\Silae\Api\Exception\AjouteCompteRenduEdi94UnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AjouteCompteRenduEdi94InternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AjouteCompteRenduEdi94Request;
use QdequippeTech\Silae\Api\Endpoint\AjouteCompteRenduEdi94;
use QdequippeTech\Silae\Api\Exception\CreationEmetteurDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationEmetteurDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationEmetteurDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationEmetteurDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationEmetteurDSN;
use QdequippeTech\Silae\Api\Model\LectureContactEmetteurDSNResponse;
use QdequippeTech\Silae\Api\Exception\LectureContactEmetteurDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureContactEmetteurDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureContactEmetteurDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureContactEmetteurDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureContactEmetteurDSN;
use QdequippeTech\Silae\Api\Model\ImportXmlParametrageOrganismeDSNResponse;
use QdequippeTech\Silae\Api\Exception\ImportXmlParametrageOrganismeDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\ImportXmlParametrageOrganismeDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ImportXmlParametrageOrganismeDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ImportXmlParametrageOrganismeDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\ImportXmlParametrageOrganismeDSN;
use QdequippeTech\Silae\Api\Exception\InitialisationAncienNumeroContratDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\InitialisationAncienNumeroContratDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\InitialisationAncienNumeroContratDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\InitialisationAncienNumeroContratDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\InitialisationAncienNumeroContratDSN;
use QdequippeTech\Silae\Api\Exception\ActivationDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\ActivationDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ActivationDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ActivationDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\ActivationDSN;
use QdequippeTech\Silae\Api\Exception\ValideCleDossierBadRequestException;
use QdequippeTech\Silae\Api\Exception\ValideCleDossierUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ValideCleDossierInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ValideCleDossierRequest;
use QdequippeTech\Silae\Api\Endpoint\ValideCleDossier;
use QdequippeTech\Silae\Api\Exception\CreationUtilisateurClientPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationUtilisateurClientPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationUtilisateurClientPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationUtilisateurClientPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationUtilisateurClientPaie;
use QdequippeTech\Silae\Api\Model\ListeUtilisateursDossierPaieResponse;
use QdequippeTech\Silae\Api\Exception\ListeUtilisateursDossierPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeUtilisateursDossierPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeUtilisateursDossierPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeUtilisateursDossierPaie;
use QdequippeTech\Silae\Api\Model\AcquisitionQuestionnaireContratComplementaireResponse;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireContratComplementaireBadRequestException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireContratComplementaireUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireContratComplementaireInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AcquisitionQuestionnaireContratComplementaireRequest;
use QdequippeTech\Silae\Api\Endpoint\AcquisitionQuestionnaireContratComplementaire;
use QdequippeTech\Silae\Api\Model\QuestionnaireContratComplementaire;
use QdequippeTech\Silae\Api\Exception\CreationQuestionnaireContratComplementaireBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationQuestionnaireContratComplementaireUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationQuestionnaireContratComplementaireInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationQuestionnaireContratComplementaireRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationQuestionnaireContratComplementaire;
use QdequippeTech\Silae\Api\Model\ControlerBulletinsPeriodeResponse;
use QdequippeTech\Silae\Api\Exception\ControlerBulletinsPeriodeBadRequestException;
use QdequippeTech\Silae\Api\Exception\ControlerBulletinsPeriodeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ControlerBulletinsPeriodeInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ControlerBulletinsPeriodeRequest;
use QdequippeTech\Silae\Api\Endpoint\ControlerBulletinsPeriode;
use QdequippeTech\Silae\Api\Model\CreationDossierPaieResponse;
use QdequippeTech\Silae\Api\Exception\CreationDossierPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationDossierPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationDossierPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationDossierPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationDossierPaie;
use QdequippeTech\Silae\Api\Model\RetourImportDSN;
use QdequippeTech\Silae\Api\Exception\ImportFichierDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\ImportFichierDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ImportFichierDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ImportFichierDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\ImportFichierDSN;
use QdequippeTech\Silae\Api\Exception\CreationDossierParImportFichierDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationDossierParImportFichierDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationDossierParImportFichierDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationDossierParImportFichierDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationDossierParImportFichierDSN;
use QdequippeTech\Silae\Api\Exception\SalarieInitialiserCumulsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieInitialiserCumulsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieInitialiserCumulsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieInitialiserCumulsRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieInitialiserCumuls;
use QdequippeTech\Silae\Api\Model\RecupererDeclarationsResponse;
use QdequippeTech\Silae\Api\Exception\RecupererDeclarationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererDeclarationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererDeclarationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\DossierPeriodeRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererDeclarations;
use QdequippeTech\Silae\Api\Exception\RecupererDeclarationsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererDeclarationsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererDeclarationsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\RecupererDeclarationsAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutAsynchroneDocumentResponse;
use QdequippeTech\Silae\Api\Exception\StatutRecupererDeclarationsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutRecupererDeclarationsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutRecupererDeclarationsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutRecupererDeclarationsAsynchrone;
use QdequippeTech\Silae\Api\Model\EcrituresComptables;
use QdequippeTech\Silae\Api\Exception\EcrituresComptablesBadRequestException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptablesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptablesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\DossierPeriodeRangeRequest;
use QdequippeTech\Silae\Api\Exception\EcrituresComptables2BadRequestException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptables2UnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptables2InternalServerErrorException;
use QdequippeTech\Silae\Api\Model\EcrituresComptables2Request;
use QdequippeTech\Silae\Api\Endpoint\EcrituresComptables2;
use QdequippeTech\Silae\Api\Exception\EcrituresComptables3BadRequestException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptables3UnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptables3InternalServerErrorException;
use QdequippeTech\Silae\Api\Model\EcrituresComptables3Request;
use QdequippeTech\Silae\Api\Endpoint\EcrituresComptables3;
use QdequippeTech\Silae\Api\Exception\EcrituresComptablesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptablesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EcrituresComptablesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EcrituresComptablesAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutEcrituresComptablesAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutEcrituresComptablesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEcrituresComptablesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEcrituresComptablesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEcrituresComptablesAsynchrone;
use QdequippeTech\Silae\Api\Model\RecupererFichiersEcrituresComptablesResponse;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersEcrituresComptablesBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersEcrituresComptablesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersEcrituresComptablesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\RecupererFichiersEcrituresComptables;
use QdequippeTech\Silae\Api\Model\SoldeRepos;
use QdequippeTech\Silae\Api\Exception\SoldeReposBadRequestException;
use QdequippeTech\Silae\Api\Exception\SoldeReposUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SoldeReposInternalServerErrorException;
use QdequippeTech\Silae\Api\Exception\SoldeReposAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\SoldeReposAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SoldeReposAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SoldeReposAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutSoldeReposResponse;
use QdequippeTech\Silae\Api\Exception\StatutSoldeReposAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutSoldeReposAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutSoldeReposAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutSoldeReposAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionJournalDePaieResponse;
use QdequippeTech\Silae\Api\Exception\EditionJournalDePaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionJournalDePaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionJournalDePaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionJournalDePaie;
use QdequippeTech\Silae\Api\Exception\EditionJournalDePaieAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionJournalDePaieAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionJournalDePaieAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionJournalDePaieAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionJournalDePaieAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionJournalDePaieAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionJournalDePaieAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionJournalDePaieAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionTableauDesChargesResponse;
use QdequippeTech\Silae\Api\Exception\EditionTableauDesChargesBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionTableauDesChargesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionTableauDesChargesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionTableauDesCharges;
use QdequippeTech\Silae\Api\Exception\EditionTableauDesChargesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionTableauDesChargesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionTableauDesChargesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionTableauDesChargesAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionTableauDesChargesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionTableauDesChargesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionTableauDesChargesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionTableauDesChargesAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionEtatDesPaiementsResponse;
use QdequippeTech\Silae\Api\Exception\EditionEtatDesPaiementsBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionEtatDesPaiementsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionEtatDesPaiementsInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionEtatDesPaiements;
use QdequippeTech\Silae\Api\Exception\EditionEtatDesPaiementsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionEtatDesPaiementsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionEtatDesPaiementsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionEtatDesPaiementsAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionEtatDesPaiementsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionEtatDesPaiementsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionEtatDesPaiementsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionEtatDesPaiementsAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionRecapDePaieResponse;
use QdequippeTech\Silae\Api\Exception\EditionRecapDePaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionRecapDePaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionRecapDePaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionRecapDePaie;
use QdequippeTech\Silae\Api\Exception\EditionRecapDePaieAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionRecapDePaieAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionRecapDePaieAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionRecapDePaieAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionRecapDePaieAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionRecapDePaieAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionRecapDePaieAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionRecapDePaieAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionSoldeDeReposResponse;
use QdequippeTech\Silae\Api\Exception\EditionSoldeDeReposBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionSoldeDeReposUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionSoldeDeReposInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionSoldeDeRepos;
use QdequippeTech\Silae\Api\Exception\EditionSoldeDeReposAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionSoldeDeReposAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionSoldeDeReposAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionSoldeDeReposAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionSoldeDeReposAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionSoldeDeReposAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionSoldeDeReposAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionSoldeDeReposAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionControleCICEResponse;
use QdequippeTech\Silae\Api\Exception\EditionControleCICEBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionControleCICEUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionControleCICEInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionControleCICE;
use QdequippeTech\Silae\Api\Exception\EditionControleCICEAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionControleCICEAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionControleCICEAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionControleCICEAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionControleCICEAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionControleCICEAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionControleCICEAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionControleCICEAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionDetailDesCotisationsResponse;
use QdequippeTech\Silae\Api\Exception\EditionDetailDesCotisationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionDetailDesCotisationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionDetailDesCotisationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionDetailDesCotisations;
use QdequippeTech\Silae\Api\Exception\EditionDetailDesCotisationsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionDetailDesCotisationsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionDetailDesCotisationsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionDetailDesCotisationsAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionDetailDesCotisationsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionDetailDesCotisationsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionDetailDesCotisationsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionDetailDesCotisationsAsynchrone;
use QdequippeTech\Silae\Api\Model\EditionCoutsSalariauxResponse;
use QdequippeTech\Silae\Api\Exception\EditionCoutsSalariauxBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionCoutsSalariauxUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionCoutsSalariauxInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionCoutsSalariaux;
use QdequippeTech\Silae\Api\Exception\EditionCoutsSalariauxAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionCoutsSalariauxAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionCoutsSalariauxAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionCoutsSalariauxAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionCoutsSalariauxAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionCoutsSalariauxAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionCoutsSalariauxAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionCoutsSalariauxAsynchrone;
use QdequippeTech\Silae\Api\Model\GenererFichierTRResponse;
use QdequippeTech\Silae\Api\Exception\GenerationFichierTRBadRequestException;
use QdequippeTech\Silae\Api\Exception\GenerationFichierTRUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\GenerationFichierTRInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\GenerationFichierTRRequest;
use QdequippeTech\Silae\Api\Endpoint\GenerationFichierTR;
use QdequippeTech\Silae\Api\Model\EditionHistoriqueResponse;
use QdequippeTech\Silae\Api\Exception\EditionHistoriqueBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionHistoriqueUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionHistoriqueInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\EditionHistoriqueRequest;
use QdequippeTech\Silae\Api\Endpoint\EditionHistorique;
use QdequippeTech\Silae\Api\Exception\EditionHistoriqueAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\EditionHistoriqueAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EditionHistoriqueAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\EditionHistoriqueAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutEditionHistoriqueAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutEditionHistoriqueAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutEditionHistoriqueAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutEditionHistoriqueAsynchrone;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterPrimeBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterPrimeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterPrimeInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterPrimeRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterPrime;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterPrimeSurEmploiBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterPrimeSurEmploiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterPrimeSurEmploiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterPrimeSurEmploiRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterPrimeSurEmploi;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterElementVariableBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterElementVariableUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterElementVariableInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterElementVariableRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterElementVariable;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterElementVariableSurEmploiBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterElementVariableSurEmploiUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterElementVariableSurEmploiInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterElementVariableSurEmploiRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterElementVariableSurEmploi;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterAcompteBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterAcompteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieAjouterAcompteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieAjouterAcompteRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieAjouterAcompte;
use QdequippeTech\Silae\Api\Model\SalariesConfirmerSaisiesResponse;
use QdequippeTech\Silae\Api\Exception\SalariesConfirmerSaisiesBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalariesConfirmerSaisiesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalariesConfirmerSaisiesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalariesConfirmerSaisiesRequest;
use QdequippeTech\Silae\Api\Endpoint\SalariesConfirmerSaisies;
use QdequippeTech\Silae\Api\Exception\SalariesConfirmerSaisiesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalariesConfirmerSaisiesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalariesConfirmerSaisiesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalariesConfirmerSaisiesAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutSalariesConfirmerSaisiesResponse;
use QdequippeTech\Silae\Api\Exception\StatutSalariesConfirmerSaisiesAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutSalariesConfirmerSaisiesAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutSalariesConfirmerSaisiesAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutSalariesConfirmerSaisiesAsynchrone;
use QdequippeTech\Silae\Api\Model\EtatDeclarationsResponse;
use QdequippeTech\Silae\Api\Exception\EtatDeclarationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\EtatDeclarationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EtatDeclarationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\EtatDeclarationsRequest;
use QdequippeTech\Silae\Api\Endpoint\EtatDeclarations;
use QdequippeTech\Silae\Api\Model\ListeEtablissementsDossierPaieResponse;
use QdequippeTech\Silae\Api\Exception\ListeEtablissementsDossierPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeEtablissementsDossierPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeEtablissementsDossierPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeEtablissementsDossierPaie;
use QdequippeTech\Silae\Api\Model\EtablissementsAExclureCVAEResponse;
use QdequippeTech\Silae\Api\Exception\EtablissementsAExclureCVAEBadRequestException;
use QdequippeTech\Silae\Api\Exception\EtablissementsAExclureCVAEUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\EtablissementsAExclureCVAEInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\EtablissementsAExclureCVAERequest;
use QdequippeTech\Silae\Api\Endpoint\EtablissementsAExclureCVAE;
use QdequippeTech\Silae\Api\Exception\MiseAJourFicheSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\MiseAJourFicheSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\MiseAJourFicheSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\MiseAJourFicheSocieteRequest;
use QdequippeTech\Silae\Api\Endpoint\MiseAJourFicheSociete;
use QdequippeTech\Silae\Api\Exception\MiseAJourFicheEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\MiseAJourFicheEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\MiseAJourFicheEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\MiseAJourFicheEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\MiseAJourFicheEtablissement;
use QdequippeTech\Silae\Api\Exception\ModificationEffectifSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationEffectifSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationEffectifSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationEffectifSocieteRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationEffectifSociete;
use QdequippeTech\Silae\Api\Exception\ModificationCCNSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationCCNSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationCCNSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationCCNSocieteRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationCCNSociete;
use QdequippeTech\Silae\Api\Exception\ModificationEffortConstructionBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationEffortConstructionUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationEffortConstructionInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationEffortConstructionRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationEffortConstruction;
use QdequippeTech\Silae\Api\Exception\ModificationFNALBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationFNALUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationFNALInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationFNALRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationFNAL;
use QdequippeTech\Silae\Api\Exception\ModificationInformationBancaireSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationInformationBancaireSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationInformationBancaireSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationInformationBancaireSocieteRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationInformationBancaireSociete;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeTransportBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeTransportUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeTransportInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationTaxeTransportRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationTaxeTransport;
use QdequippeTech\Silae\Api\Model\ModificationTaxeApprentissageEtablissementResponse;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeApprentissageEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeApprentissageEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeApprentissageEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationTaxeApprentissageEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationTaxeApprentissageEtablissement;
use QdequippeTech\Silae\Api\Model\ModificationTaxeApprentissageSocieteResponse;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeApprentissageSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeApprentissageSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationTaxeApprentissageSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationTaxeApprentissageSocieteRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationTaxeApprentissageSociete;
use QdequippeTech\Silae\Api\Exception\ModificationEffectifEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationEffectifEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationEffectifEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationEffectifEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationEffectifEtablissement;
use QdequippeTech\Silae\Api\Exception\ModificationQuestionnaireCCNEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationQuestionnaireCCNEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationQuestionnaireCCNEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationQuestionnaireCCNEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationQuestionnaireCCNEtablissement;
use QdequippeTech\Silae\Api\Exception\ModificationGrilleHoraireEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationGrilleHoraireEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationGrilleHoraireEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationGrilleHoraireEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationGrilleHoraireEtablissement;
use QdequippeTech\Silae\Api\Model\LectureEffectifSocieteResponse;
use QdequippeTech\Silae\Api\Exception\LectureEffectifSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureEffectifSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureEffectifSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureEffectifSociete;
use QdequippeTech\Silae\Api\Model\LectureCCNSocieteResponse;
use QdequippeTech\Silae\Api\Exception\LectureCCNSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureCCNSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureCCNSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureCCNSociete;
use QdequippeTech\Silae\Api\Model\EffortConstruction;
use QdequippeTech\Silae\Api\Exception\LectureEffortConstructionBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureEffortConstructionUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureEffortConstructionInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureEffortConstruction;
use QdequippeTech\Silae\Api\Model\FNAL;
use QdequippeTech\Silae\Api\Exception\LectureFNALBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureFNALUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureFNALInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureFNAL;
use QdequippeTech\Silae\Api\Model\LectureInformationBancaireSocieteResponse;
use QdequippeTech\Silae\Api\Exception\LectureInformationBancaireSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureInformationBancaireSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureInformationBancaireSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureInformationBancaireSociete;
use QdequippeTech\Silae\Api\Model\LectureTaxeTransportResponse;
use QdequippeTech\Silae\Api\Exception\LectureTaxeTransportBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureTaxeTransportUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureTaxeTransportInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureTaxeTransportRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureTaxeTransport;
use QdequippeTech\Silae\Api\Model\LectureTaxeApprentissageSocieteResponse;
use QdequippeTech\Silae\Api\Exception\LectureTaxeApprentissageSocieteBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureTaxeApprentissageSocieteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureTaxeApprentissageSocieteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureTaxeApprentissageSocieteRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureTaxeApprentissageSociete;
use QdequippeTech\Silae\Api\Model\LectureTaxeApprentissageEtablissementResponse;
use QdequippeTech\Silae\Api\Exception\LectureTaxeApprentissageEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureTaxeApprentissageEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureTaxeApprentissageEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureTaxeApprentissageEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureTaxeApprentissageEtablissement;
use QdequippeTech\Silae\Api\Model\LectureEffectifEtablissementResponse;
use QdequippeTech\Silae\Api\Exception\LectureEffectifEtablissementBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureEffectifEtablissementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureEffectifEtablissementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureEffectifEtablissementRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureEffectifEtablissement;
use QdequippeTech\Silae\Api\Model\SalarieRecupererDUEResponse;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererDUEBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererDUEUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererDUEInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\DossierMatriculeSalarieRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieRecupererDUE;
use QdequippeTech\Silae\Api\Model\SalarieRecupererRecuDPAEResponse;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererRecuDPAEBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererRecuDPAEUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererRecuDPAEInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieRecupererRecuDPAE;
use QdequippeTech\Silae\Api\Exception\SalarieDUEBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieDUEUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieDUEInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieDUERequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieDUE;
use QdequippeTech\Silae\Api\Exception\SalarieDUEAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieDUEAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieDUEAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieDUEAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutSalariesDUEAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutSalarieDUEAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutSalarieDUEAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutSalarieDUEAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutSalarieDUEAsynchrone;
use QdequippeTech\Silae\Api\Model\SalariesDUEResponse;
use QdequippeTech\Silae\Api\Exception\SalariesDUEBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalariesDUEUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalariesDUEInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalariesDUERequest;
use QdequippeTech\Silae\Api\Endpoint\SalariesDUE;
use QdequippeTech\Silae\Api\Model\RechercheCCNResponse;
use QdequippeTech\Silae\Api\Exception\RechercheCCNBadRequestException;
use QdequippeTech\Silae\Api\Exception\RechercheCCNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RechercheCCNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RechercheCCNRequest;
use QdequippeTech\Silae\Api\Endpoint\RechercheCCN;
use QdequippeTech\Silae\Api\Model\CCN;
use QdequippeTech\Silae\Api\Exception\RechercheCCNParCodeBadRequestException;
use QdequippeTech\Silae\Api\Exception\RechercheCCNParCodeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RechercheCCNParCodeInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RechercheCCNParCodeRequest;
use QdequippeTech\Silae\Api\Endpoint\RechercheCCNParCode;
use QdequippeTech\Silae\Api\Model\SalarieBulletinEnteteResult;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinEnteteBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinEnteteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinEnteteInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieBulletinEnteteRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieBulletinEntete;
use QdequippeTech\Silae\Api\Model\SalarieBulletinLignesResult;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinLignesBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinLignesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinLignesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieBulletinLignesRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieBulletinLignes;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinLignesSelonFiltresBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinLignesSelonFiltresUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinLignesSelonFiltresInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieBulletinLignesSelonFiltresRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieBulletinLignesSelonFiltres;
use QdequippeTech\Silae\Api\Model\SalarieBulletinDetailsResult;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinDetailsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinDetailsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinDetailsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieBulletinDetailsRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieBulletinDetails;
use QdequippeTech\Silae\Api\Model\SalarieBulletinCumulsResult;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinCumulsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinCumulsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieBulletinCumulsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieBulletinCumulsRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieBulletinCumuls;
use QdequippeTech\Silae\Api\Model\SalariesStockVarResponse;
use QdequippeTech\Silae\Api\Exception\SalariesStockVarBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalariesStockVarUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalariesStockVarInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalariesStockVarRequest;
use QdequippeTech\Silae\Api\Endpoint\SalariesStockVar;
use QdequippeTech\Silae\Api\Model\ListeDSNMensuellesResponse;
use QdequippeTech\Silae\Api\Exception\ListeDSNMensuellesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeDSNMensuellesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeDSNMensuellesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeDSNMensuelles;
use QdequippeTech\Silae\Api\Model\AcquisitionContenuPartielDSNResponse;
use QdequippeTech\Silae\Api\Exception\AcquisitionContenuPartielDSNBadRequestException;
use QdequippeTech\Silae\Api\Exception\AcquisitionContenuPartielDSNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AcquisitionContenuPartielDSNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AcquisitionContenuPartielDSNRequest;
use QdequippeTech\Silae\Api\Endpoint\AcquisitionContenuPartielDSN;
use QdequippeTech\Silae\Api\Model\RechercheDeclarationEvenementielleResponse;
use QdequippeTech\Silae\Api\Exception\RechercheDeclarationEvenementielleBadRequestException;
use QdequippeTech\Silae\Api\Exception\RechercheDeclarationEvenementielleUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RechercheDeclarationEvenementielleInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RechercheDeclarationEvenementielleRequest;
use QdequippeTech\Silae\Api\Endpoint\RechercheDeclarationEvenementielle;
use QdequippeTech\Silae\Api\Model\SalarieRecupererPeriodeDernierBulletinCalculeResponse;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererPeriodeDernierBulletinCalculeBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererPeriodeDernierBulletinCalculeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieRecupererPeriodeDernierBulletinCalculeInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieRecupererPeriodeDernierBulletinCalcule;
use QdequippeTech\Silae\Api\Model\LectureInformationsPaieResponse;
use QdequippeTech\Silae\Api\Exception\LectureInformationsPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureInformationsPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureInformationsPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureInformationsPaieRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureInformationsPaie;
use QdequippeTech\Silae\Api\Model\SalariesBulletinsResponse;
use QdequippeTech\Silae\Api\Exception\SalariesBulletinsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalariesBulletinsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalariesBulletinsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalariesBulletinsRequest;
use QdequippeTech\Silae\Api\Endpoint\SalariesBulletins;
use QdequippeTech\Silae\Api\Exception\SalariesBulletinsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalariesBulletinsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalariesBulletinsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalariesBulletinsAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutSalariesBulletinsResponse;
use QdequippeTech\Silae\Api\Exception\StatutSalariesBulletinsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutSalariesBulletinsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutSalariesBulletinsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutSalariesBulletinsAsynchrone;
use QdequippeTech\Silae\Api\Model\ListeSalariesResponse;
use QdequippeTech\Silae\Api\Exception\ListeSalariesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeSalariesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeSalariesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ListeSalariesRequest;
use QdequippeTech\Silae\Api\Endpoint\ListeSalaries;
use QdequippeTech\Silae\Api\Model\ListeSalariesExternesResponse;
use QdequippeTech\Silae\Api\Exception\ListeSalariesExternesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeSalariesExternesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeSalariesExternesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ListeSalariesExternesRequest;
use QdequippeTech\Silae\Api\Endpoint\ListeSalariesExternes;
use QdequippeTech\Silae\Api\Model\SalarieSalaireDeBaseResult;
use QdequippeTech\Silae\Api\Exception\SalarieSalaireDeBaseBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieSalaireDeBaseUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieSalaireDeBaseInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SalarieSalaireDeBaseRequest;
use QdequippeTech\Silae\Api\Endpoint\SalarieSalaireDeBase;
use QdequippeTech\Silae\Api\Model\SalarieSyntheseCarriereResponse;
use QdequippeTech\Silae\Api\Exception\SalarieSyntheseCarriereBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieSyntheseCarriereUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieSyntheseCarriereInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieSyntheseCarriere;
use QdequippeTech\Silae\Api\Exception\SalarieSyntheseCarriereAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieSyntheseCarriereAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieSyntheseCarriereAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieSyntheseCarriereAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutSalarieSyntheseCarriereResponse;
use QdequippeTech\Silae\Api\Exception\StatutSalarieSyntheseCarriereAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutSalarieSyntheseCarriereAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutSalarieSyntheseCarriereAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutSalarieSyntheseCarriereAsynchrone;
use QdequippeTech\Silae\Api\Model\LecturePersonnesLieesResponse;
use QdequippeTech\Silae\Api\Exception\LecturePersonnesLieesBadRequestException;
use QdequippeTech\Silae\Api\Exception\LecturePersonnesLieesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LecturePersonnesLieesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\DossierMatriculeRequest;
use QdequippeTech\Silae\Api\Endpoint\LecturePersonnesLiees;
use QdequippeTech\Silae\Api\Model\LectureHandicapResponse;
use QdequippeTech\Silae\Api\Exception\LectureHandicapBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureHandicapUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureHandicapInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureHandicap;
use QdequippeTech\Silae\Api\Model\LectureSalarieProtegeResponse;
use QdequippeTech\Silae\Api\Exception\LectureSalarieProtegeBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureSalarieProtegeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureSalarieProtegeInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureSalarieProtege;
use QdequippeTech\Silae\Api\Model\LectureSaisieArretResponse;
use QdequippeTech\Silae\Api\Exception\LectureSaisieArretBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureSaisieArretUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureSaisieArretInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\LectureSaisieArret;
use QdequippeTech\Silae\Api\Model\ListeNumerosDossiersResponse;
use QdequippeTech\Silae\Api\Exception\ListeNumerosDossiersBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeNumerosDossiersUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeNumerosDossiersInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeNumerosDossiers;
use QdequippeTech\Silae\Api\Model\ListeDossiersResponse;
use QdequippeTech\Silae\Api\Exception\ListeDossiersBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeDossiersUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeDossiersInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ListeDossiersRequest;
use QdequippeTech\Silae\Api\Endpoint\ListeDossiers;
use QdequippeTech\Silae\Api\Model\ListeInformationsDossiersPaieResponse;
use QdequippeTech\Silae\Api\Exception\ListeInformationsDossiersPaieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeInformationsDossiersPaieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeInformationsDossiersPaieInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeInformationsDossiersPaie;
use QdequippeTech\Silae\Api\Model\DossierRecupererPeriodeEnCoursResponse;
use QdequippeTech\Silae\Api\Exception\DossierRecupererPeriodeEnCoursBadRequestException;
use QdequippeTech\Silae\Api\Exception\DossierRecupererPeriodeEnCoursUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\DossierRecupererPeriodeEnCoursInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\DossierRecupererPeriodeEnCours;
use QdequippeTech\Silae\Api\Model\MatriculeSalarieResponse;
use QdequippeTech\Silae\Api\Exception\MatriculeSalarieBadRequestException;
use QdequippeTech\Silae\Api\Exception\MatriculeSalarieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\MatriculeSalarieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\MatriculeSalarieRequest;
use QdequippeTech\Silae\Api\Endpoint\MatriculeSalarie;
use QdequippeTech\Silae\Api\Model\ListeMatriculesDupliquesResponse;
use QdequippeTech\Silae\Api\Exception\ListeMatriculesDupliquesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeMatriculesDupliquesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeMatriculesDupliquesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ListeMatriculesDupliquesRequest;
use QdequippeTech\Silae\Api\Endpoint\ListeMatriculesDupliques;
use QdequippeTech\Silae\Api\Model\ListeMatriculesDupliquesDansDomaineResponse;
use QdequippeTech\Silae\Api\Exception\ListeMatriculesDupliquesDansDomaineBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeMatriculesDupliquesDansDomaineUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeMatriculesDupliquesDansDomaineInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeMatriculesDupliquesDansDomaine;
use QdequippeTech\Silae\Api\Model\ExistenceMatriculeResponse;
use QdequippeTech\Silae\Api\Exception\ExistenceMatriculeBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExistenceMatriculeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExistenceMatriculeInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ExistenceMatricule;
use QdequippeTech\Silae\Api\Model\ExtraListeManifestationsResponse;
use QdequippeTech\Silae\Api\Exception\ExtraListeManifestationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExtraListeManifestationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExtraListeManifestationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ExtraListeManifestationsRequest;
use QdequippeTech\Silae\Api\Endpoint\ExtraListeManifestations;
use QdequippeTech\Silae\Api\Exception\ExtraCreationManifestationBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExtraCreationManifestationUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExtraCreationManifestationInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ExtraCreationManifestationRequest;
use QdequippeTech\Silae\Api\Endpoint\ExtraCreationManifestation;
use QdequippeTech\Silae\Api\Model\ExtraSalarieVacations;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieAcquisitionVacationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieAcquisitionVacationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieAcquisitionVacationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ExtraSalarieAcquisitionVacationsRequest;
use QdequippeTech\Silae\Api\Endpoint\ExtraSalarieAcquisitionVacations;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieAjouterVacationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieAjouterVacationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieAjouterVacationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ExtraSalarieAjouterVacationsRequest;
use QdequippeTech\Silae\Api\Endpoint\ExtraSalarieAjouterVacations;
use QdequippeTech\Silae\Api\Model\ExtraSalarieReinitialiserVacationsResponse;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieReinitialiserVacationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieReinitialiserVacationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieReinitialiserVacationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ExtraSalarieReinitialiserVacationsRequest;
use QdequippeTech\Silae\Api\Endpoint\ExtraSalarieReinitialiserVacations;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieCalculerBulletinBadRequestException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieCalculerBulletinUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ExtraSalarieCalculerBulletinInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ExtraSalarieCalculerBulletinRequest;
use QdequippeTech\Silae\Api\Endpoint\ExtraSalarieCalculerBulletin;
use QdequippeTech\Silae\Api\Model\SpectacleListeResponse;
use QdequippeTech\Silae\Api\Exception\SpectacleListeBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleListeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleListeInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SpectacleListeRequest;
use QdequippeTech\Silae\Api\Endpoint\SpectacleListe;
use QdequippeTech\Silae\Api\Exception\SpectacleCreationBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleCreationUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleCreationInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SpectacleCreationRequest;
use QdequippeTech\Silae\Api\Endpoint\SpectacleCreation;
use QdequippeTech\Silae\Api\Model\SpectacleSalarieAffectations;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieAcquisitionAffectationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieAcquisitionAffectationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieAcquisitionAffectationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SpectacleSalarieAcquisitionAffectationsRequest;
use QdequippeTech\Silae\Api\Endpoint\SpectacleSalarieAcquisitionAffectations;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieAjouterAffectationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieAjouterAffectationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieAjouterAffectationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SpectacleSalarieAjouterAffectationsRequest;
use QdequippeTech\Silae\Api\Endpoint\SpectacleSalarieAjouterAffectations;
use QdequippeTech\Silae\Api\Model\SpectacleSalarieReinitialiserAffectationsResponse;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieReinitialiserAffectationsBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieReinitialiserAffectationsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieReinitialiserAffectationsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SpectacleSalarieReinitialiserAffectationsRequest;
use QdequippeTech\Silae\Api\Endpoint\SpectacleSalarieReinitialiserAffectations;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieCalculerBulletinBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieCalculerBulletinUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieCalculerBulletinInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SpectacleSalarieCalculerBulletinRequest;
use QdequippeTech\Silae\Api\Endpoint\SpectacleSalarieCalculerBulletin;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieCalculerBulletinAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieCalculerBulletinAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SpectacleSalarieCalculerBulletinAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SpectacleSalarieCalculerBulletinAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutSpectacleSalarieCalculerBulletinAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutSpectacleSalarieCalculerBulletinAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutSpectacleSalarieCalculerBulletinAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutSpectacleSalarieCalculerBulletinAsynchrone;
use QdequippeTech\Silae\Api\Exception\CreationOrganismeBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationOrganismeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationOrganismeInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationOrganismeRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationOrganisme;
use QdequippeTech\Silae\Api\Model\RecupererFichiersVirementResponse;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RecupererFichiersVirementRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererFichiersVirement;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementChiffresBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementChiffresUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementChiffresInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RecupererFichiersVirementChiffresRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererFichiersVirementChiffres;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementHorsBulletinBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementHorsBulletinUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementHorsBulletinInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RecupererFichiersVirementHorsBulletinRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererFichiersVirementHorsBulletin;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementHorsBulletinChiffresBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementHorsBulletinChiffresUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererFichiersVirementHorsBulletinChiffresInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RecupererFichiersVirementHorsBulletinChiffresRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererFichiersVirementHorsBulletinChiffres;
use QdequippeTech\Silae\Api\Model\AcquisitionQuestionnaireCCNResponse;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireEtablissementCCNBadRequestException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireEtablissementCCNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireEtablissementCCNInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\AcquisitionQuestionnaireCCNRequest;
use QdequippeTech\Silae\Api\Endpoint\AcquisitionQuestionnaireEtablissementCCN;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireEtablissementCCNAvecTexteBadRequestException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireEtablissementCCNAvecTexteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireEtablissementCCNAvecTexteInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\AcquisitionQuestionnaireEtablissementCCNAvecTexte;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireSalarieCCNBadRequestException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireSalarieCCNUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireSalarieCCNInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\AcquisitionQuestionnaireSalarieCCN;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireSalarieCCNAvecTexteBadRequestException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireSalarieCCNAvecTexteUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\AcquisitionQuestionnaireSalarieCCNAvecTexteInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\AcquisitionQuestionnaireSalarieCCNAvecTexte;
use QdequippeTech\Silae\Api\Model\RecupererImageResponse;
use QdequippeTech\Silae\Api\Exception\RecupererImageBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererImageUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererImageInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RecupererImageRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererImage;
use QdequippeTech\Silae\Api\Exception\RecupererImageAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererImageAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererImageAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\RecupererImageAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutRecupererImageAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutRecupererImageAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutRecupererImageAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutRecupererImageAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutRecupererImageAsynchrone;
use QdequippeTech\Silae\Api\Model\RecupererDuplicatasBulletinsResponse;
use QdequippeTech\Silae\Api\Exception\RecupererDuplicatasBulletinsBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererDuplicatasBulletinsUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererDuplicatasBulletinsInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\RecupererDuplicatasBulletinsRequest;
use QdequippeTech\Silae\Api\Endpoint\RecupererDuplicatasBulletins;
use QdequippeTech\Silae\Api\Exception\RecupererDuplicatasBulletinsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\RecupererDuplicatasBulletinsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\RecupererDuplicatasBulletinsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\RecupererDuplicatasBulletinsAsynchrone;
use QdequippeTech\Silae\Api\Exception\StatutRecupererDuplicatasBulletinsAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutRecupererDuplicatasBulletinsAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutRecupererDuplicatasBulletinsAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutRecupererDuplicatasBulletinsAsynchrone;
use QdequippeTech\Silae\Api\Model\CreationSalarieEmploisResponse;
use QdequippeTech\Silae\Api\Exception\CreationSalarieEmploisBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationSalarieEmploisUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationSalarieEmploisInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\CreationSalarieEmploisRequest;
use QdequippeTech\Silae\Api\Endpoint\CreationSalarieEmplois;
use QdequippeTech\Silae\Api\Exception\CreationSalarieEmploisAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\CreationSalarieEmploisAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\CreationSalarieEmploisAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\CreationSalarieEmploisAsynchrone;
use QdequippeTech\Silae\Api\Model\StatutCreationSalarieEmploisAsynchroneResponse;
use QdequippeTech\Silae\Api\Exception\StatutCreationSalarieEmploisAsynchroneBadRequestException;
use QdequippeTech\Silae\Api\Exception\StatutCreationSalarieEmploisAsynchroneUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\StatutCreationSalarieEmploisAsynchroneInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\StatutCreationSalarieEmploisAsynchrone;
use QdequippeTech\Silae\Api\Model\ListeSalarieEmploisResponse;
use QdequippeTech\Silae\Api\Exception\ListeSalarieEmploisBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeSalarieEmploisUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeSalarieEmploisInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ListeSalarieEmploisRequest;
use QdequippeTech\Silae\Api\Endpoint\ListeSalarieEmplois;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserIdentifiantsEmploisBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserIdentifiantsEmploisUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserIdentifiantsEmploisInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieReinitialiserIdentifiantsEmplois;
use QdequippeTech\Silae\Api\Model\ListeSalarieEmploisExternesResponse;
use QdequippeTech\Silae\Api\Exception\ListeSalarieEmploisExternesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeSalarieEmploisExternesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeSalarieEmploisExternesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeSalarieEmploisExternes;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserIdentifiantsEmploisExternesBadRequestException;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserIdentifiantsEmploisExternesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SalarieReinitialiserIdentifiantsEmploisExternesInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\SalarieReinitialiserIdentifiantsEmploisExternes;
use QdequippeTech\Silae\Api\Model\ModificationChamp;
use QdequippeTech\Silae\Api\Exception\ModificationChampSalarieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationChampSalarieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationChampSalarieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationChampSalarieRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationChampSalarie;
use QdequippeTech\Silae\Api\Exception\ModificationPersonnesLieesBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationPersonnesLieesUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationPersonnesLieesInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationPersonnesLieesRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationPersonnesLiees;
use QdequippeTech\Silae\Api\Exception\ModificationHandicapBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationHandicapUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationHandicapInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationHandicapRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationHandicap;
use QdequippeTech\Silae\Api\Exception\ModificationSalarieProtegeBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationSalarieProtegeUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationSalarieProtegeInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationSalarieProtegeRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationSalarieProtege;
use QdequippeTech\Silae\Api\Exception\ModificationSaisieArretBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationSaisieArretUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationSaisieArretInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationSaisieArretRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationSaisieArret;
use QdequippeTech\Silae\Api\Model\LectureQuestionnaireContratComplementaireResponse;
use QdequippeTech\Silae\Api\Exception\LectureQuestionnaireContratComplementaireSalarieBadRequestException;
use QdequippeTech\Silae\Api\Exception\LectureQuestionnaireContratComplementaireSalarieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\LectureQuestionnaireContratComplementaireSalarieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\LectureQuestionnaireContratComplementaireRequest;
use QdequippeTech\Silae\Api\Endpoint\LectureQuestionnaireContratComplementaireSalarie;
use QdequippeTech\Silae\Api\Exception\ModificationQuestionnaireContratComplementaireSalarieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationQuestionnaireContratComplementaireSalarieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationQuestionnaireContratComplementaireSalarieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationQuestionnaireContratComplementaireRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationQuestionnaireContratComplementaireSalarie;
use QdequippeTech\Silae\Api\Exception\ModificationGrilleHoraireSalarieBadRequestException;
use QdequippeTech\Silae\Api\Exception\ModificationGrilleHoraireSalarieUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ModificationGrilleHoraireSalarieInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\ModificationGrilleHoraireSalarieRequest;
use QdequippeTech\Silae\Api\Endpoint\ModificationGrilleHoraireSalarie;
use QdequippeTech\Silae\Api\Model\SiteGenereMotDePasseAlternatifResponse;
use QdequippeTech\Silae\Api\Exception\SiteGenereMotDePasseAlternatifBadRequestException;
use QdequippeTech\Silae\Api\Exception\SiteGenereMotDePasseAlternatifUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\SiteGenereMotDePasseAlternatifInternalServerErrorException;
use QdequippeTech\Silae\Api\Model\SiteGenereMotDePasseAlternatifRequest;
use QdequippeTech\Silae\Api\Endpoint\SiteGenereMotDePasseAlternatif;
use QdequippeTech\Silae\Api\Model\ListeVariablesASaisirResponse;
use QdequippeTech\Silae\Api\Exception\ListeVariablesASaisirBadRequestException;
use QdequippeTech\Silae\Api\Exception\ListeVariablesASaisirUnauthorizedException;
use QdequippeTech\Silae\Api\Exception\ListeVariablesASaisirInternalServerErrorException;
use QdequippeTech\Silae\Api\Endpoint\ListeVariablesASaisir;
use Http\Discovery\Psr18ClientDiscovery;
use Http\Discovery\Psr17FactoryDiscovery;
use Http\Client\Common\Plugin\AddHostPlugin;
use Http\Client\Common\Plugin\AddPathPlugin;
use Http\Client\Common\PluginClient;
use Symfony\Component\Serializer\Normalizer\ArrayDenormalizer;
use QdequippeTech\Silae\Api\Normalizer\JaneObjectNormalizer;
use Symfony\Component\Serializer\Serializer;
use Symfony\Component\Serializer\Encoder\JsonEncoder;
use Symfony\Component\Serializer\Encoder\JsonEncode;
use Symfony\Component\Serializer\Encoder\JsonDecode;
class Client extends \QdequippeTech\Silae\Api\Runtime\Client\Client
{
    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieSupprimerAbsenceBadRequestException
     * @throws SalarieSupprimerAbsenceUnauthorizedException
     * @throws SalarieSupprimerAbsenceInternalServerErrorException
     */
    public function salarieSupprimerAbsence(SalarieSupprimerAbsenceRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieSupprimerAbsence($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterAbsenceBadRequestException
     * @throws SalarieAjouterAbsenceUnauthorizedException
     * @throws SalarieAjouterAbsenceInternalServerErrorException
     */
    public function salarieAjouterAbsence(SalarieAjouterAbsenceRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterAbsence($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieModifierAbsenceBadRequestException
     * @throws SalarieModifierAbsenceUnauthorizedException
     * @throws SalarieModifierAbsenceInternalServerErrorException
     */
    public function salarieModifierAbsence(SalarieModifierAbsenceRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieModifierAbsence($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                 $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieAbsencesResponse|ResponseInterface|null
     *
     * @throws SalarieAbsencesBadRequestException
     * @throws SalarieAbsencesUnauthorizedException
     * @throws SalarieAbsencesInternalServerErrorException
     */
    public function salarieAbsences(SalarieAbsencesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAbsences($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterHeuresBadRequestException
     * @throws SalarieAjouterHeuresUnauthorizedException
     * @throws SalarieAjouterHeuresInternalServerErrorException
     */
    public function salarieAjouterHeures(SalarieAjouterHeuresRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterHeures($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterHeuresSurEmploiBadRequestException
     * @throws SalarieAjouterHeuresSurEmploiUnauthorizedException
     * @throws SalarieAjouterHeuresSurEmploiInternalServerErrorException
     */
    public function salarieAjouterHeuresSurEmploi(SalarieAjouterHeuresSurEmploiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterHeuresSurEmploi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterActiviteJournaliereBadRequestException
     * @throws SalarieAjouterActiviteJournaliereUnauthorizedException
     * @throws SalarieAjouterActiviteJournaliereInternalServerErrorException
     */
    public function salarieAjouterActiviteJournaliere(SalarieAjouterActiviteJournaliereRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterActiviteJournaliere($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterActiviteJournaliereSurEmploiBadRequestException
     * @throws SalarieAjouterActiviteJournaliereSurEmploiUnauthorizedException
     * @throws SalarieAjouterActiviteJournaliereSurEmploiInternalServerErrorException
     */
    public function salarieAjouterActiviteJournaliereSurEmploi(SalarieAjouterActiviteJournaliereSurEmploiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterActiviteJournaliereSurEmploi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterHeuresNativesBadRequestException
     * @throws SalarieAjouterHeuresNativesUnauthorizedException
     * @throws SalarieAjouterHeuresNativesInternalServerErrorException
     */
    public function salarieAjouterHeuresNatives(SalarieAjouterHeuresNativesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterHeuresNatives($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterHeuresNativesSurEmploiBadRequestException
     * @throws SalarieAjouterHeuresNativesSurEmploiUnauthorizedException
     * @throws SalarieAjouterHeuresNativesSurEmploiInternalServerErrorException
     */
    public function salarieAjouterHeuresNativesSurEmploi(SalarieAjouterHeuresNativesSurEmploiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterHeuresNativesSurEmploi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieReinitialiserSaisiesResponse|ResponseInterface|null
     *
     * @throws SalarieReinitialiserSaisiesBadRequestException
     * @throws SalarieReinitialiserSaisiesUnauthorizedException
     * @throws SalarieReinitialiserSaisiesInternalServerErrorException
     */
    public function salarieReinitialiserSaisies(SalarieReinitialiserSaisiesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieReinitialiserSaisies($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeAgencesResponse|ResponseInterface|null
     *
     * @throws ListeAgencesBadRequestException
     * @throws ListeAgencesUnauthorizedException
     * @throws ListeAgencesInternalServerErrorException
     */
    public function listeAgences(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeAgences($headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeDossiersAgenceResponse|ResponseInterface|null
     *
     * @throws ListeDossiersAgenceBadRequestException
     * @throws ListeDossiersAgenceUnauthorizedException
     * @throws ListeDossiersAgenceInternalServerErrorException
     */
    public function listeDossiersAgence(ListeDossiersAgenceRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeDossiersAgence($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                    $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AgenceDetail|ResponseInterface|null
     *
     * @throws LectureFicheAgenceBadRequestException
     * @throws LectureFicheAgenceUnauthorizedException
     * @throws LectureFicheAgenceInternalServerErrorException
     */
    public function lectureFicheAgence(LectureFicheAgenceRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureFicheAgence($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws AffectationDossierPaieBadRequestException
     * @throws AffectationDossierPaieUnauthorizedException
     * @throws AffectationDossierPaieInternalServerErrorException
     */
    public function affectationDossierPaie(AffectationDossierPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AffectationDossierPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AffectationDossierPaieLectureResponse|ResponseInterface|null
     *
     * @throws AffectationDossierPaieLectureBadRequestException
     * @throws AffectationDossierPaieLectureUnauthorizedException
     * @throws AffectationDossierPaieLectureInternalServerErrorException
     */
    public function affectationDossierPaieLecture(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AffectationDossierPaieLecture($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                    $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return UtilisateurCollaborateur|ResponseInterface|null
     *
     * @throws AdministrationCollaborateurLectureBadRequestException
     * @throws AdministrationCollaborateurLectureUnauthorizedException
     * @throws AdministrationCollaborateurLectureInternalServerErrorException
     */
    public function administrationCollaborateurLecture(AdministrationCollaborateurLectureRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AdministrationCollaborateurLecture($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return UtilisateurCollaborateur|ResponseInterface|null
     *
     * @throws AdministrationCollaborateurLectureParIdentifiantBadRequestException
     * @throws AdministrationCollaborateurLectureParIdentifiantUnauthorizedException
     * @throws AdministrationCollaborateurLectureParIdentifiantInternalServerErrorException
     */
    public function administrationCollaborateurLectureParIdentifiant(AdministrationCollaborateurLectureParIdentifiantRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AdministrationCollaborateurLectureParIdentifiant($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws AdministrationCollaborateurEnregistrementBadRequestException
     * @throws AdministrationCollaborateurEnregistrementUnauthorizedException
     * @throws AdministrationCollaborateurEnregistrementInternalServerErrorException
     */
    public function administrationCollaborateurEnregistrement(AdministrationCollaborateurEnregistrementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AdministrationCollaborateurEnregistrement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationDroitsFonctionnelsProductionPaieBadRequestException
     * @throws ModificationDroitsFonctionnelsProductionPaieUnauthorizedException
     * @throws ModificationDroitsFonctionnelsProductionPaieInternalServerErrorException
     */
    public function modificationDroitsFonctionnelsProductionPaie(ModificationDroitsFonctionnelsProductionPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationDroitsFonctionnelsProductionPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return CompteCollaborateur|ResponseInterface|null
     *
     * @throws LectureCompteCollaborateurBadRequestException
     * @throws LectureCompteCollaborateurUnauthorizedException
     * @throws LectureCompteCollaborateurInternalServerErrorException
     */
    public function lectureCompteCollaborateur(LectureCompteCollaborateurRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureCompteCollaborateur($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return CompteCollaborateur|ResponseInterface|null
     *
     * @throws CreationCompteCollaborateurBadRequestException
     * @throws CreationCompteCollaborateurUnauthorizedException
     * @throws CreationCompteCollaborateurInternalServerErrorException
     */
    public function creationCompteCollaborateur(CreationCompteCollaborateurRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationCompteCollaborateur($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                    $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws AffecterCleDossierBadRequestException
     * @throws AffecterCleDossierUnauthorizedException
     * @throws AffecterCleDossierInternalServerErrorException
     */
    public function affecterCleDossier(AffecterCleDossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AffecterCleDossier($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws GererEtatDossierPaieBadRequestException
     * @throws GererEtatDossierPaieUnauthorizedException
     * @throws GererEtatDossierPaieInternalServerErrorException
     */
    public function gererEtatDossierPaie(GererEtatDossierPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new GererEtatDossierPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws GererEtatRobotDePaieBadRequestException
     * @throws GererEtatRobotDePaieUnauthorizedException
     * @throws GererEtatRobotDePaieInternalServerErrorException
     */
    public function gererEtatRobotDePaie(GererEtatRobotDePaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new GererEtatRobotDePaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws GererCycleDePaieBadRequestException
     * @throws GererCycleDePaieUnauthorizedException
     * @throws GererCycleDePaieInternalServerErrorException
     */
    public function gererCycleDePaie(GererCycleDePaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new GererCycleDePaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeDossiersDemoSilaeResponse|ResponseInterface|null
     *
     * @throws ListeDossiersDemoSilaeBadRequestException
     * @throws ListeDossiersDemoSilaeUnauthorizedException
     * @throws ListeDossiersDemoSilaeInternalServerErrorException
     */
    public function listeDossiersDemoSilae(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeDossiersDemoSilae($headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws ImportDossierDemoAsynchroneBadRequestException
     * @throws ImportDossierDemoAsynchroneUnauthorizedException
     * @throws ImportDossierDemoAsynchroneInternalServerErrorException
     */
    public function importDossierDemoAsynchrone(ImportDossierDemoRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ImportDossierDemoAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutImportDossierDemoAsynchroneBadRequestException
     * @throws StatutImportDossierDemoAsynchroneUnauthorizedException
     * @throws StatutImportDossierDemoAsynchroneInternalServerErrorException
     */
    public function statutImportDossierDemoAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutImportDossierDemoAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AnalyseConfigurationAccesApiResponse|ResponseInterface|null
     *
     * @throws AnalyseConfigurationAccesApiBadRequestException
     * @throws AnalyseConfigurationAccesApiUnauthorizedException
     * @throws AnalyseConfigurationAccesApiInternalServerErrorException
     */
    public function analyseConfigurationAccesApi(AnalyseConfigurationAccesApiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseConfigurationAccesApi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return CreationConfigurationAccesApi|ResponseInterface|null
     *
     * @throws CreationConfigurationAccesApiBadRequestException
     * @throws CreationConfigurationAccesApiUnauthorizedException
     * @throws CreationConfigurationAccesApiInternalServerErrorException
     */
    public function creationConfigurationAccesApi(CreationConfigurationAccesApiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new \QdequippeTech\Silae\Api\Endpoint\CreationConfigurationAccesApi($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeComptesApiResponse|ResponseInterface|null
     *
     * @throws ListeComptesApiBadRequestException
     * @throws ListeComptesApiUnauthorizedException
     * @throws ListeComptesApiInternalServerErrorException
     */
    public function listeComptesApi(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeComptesApi($headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var int $idEntite
     *          }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Domain[]|ResponseInterface|null
     *
     * @throws DomainesBadRequestException
     * @throws DomainesUnauthorizedException
     * @throws DomainesInternalServerErrorException
     */
    public function domaines(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Domaines($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Entity[]|ResponseInterface|null
     *
     * @throws EntitesBadRequestException
     * @throws EntitesUnauthorizedException
     * @throws EntitesInternalServerErrorException
     */
    public function entites(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Entites($headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $domNomBase
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return Agency[]|ResponseInterface|null
     *
     * @throws AgenciesBadRequestException
     * @throws AgenciesUnauthorizedException
     * @throws AgenciesInternalServerErrorException
     */
    public function agencies(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new Agencies($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AnalyseProductionPaieResponse|ResponseInterface|null
     *
     * @throws AnalyseProductionPaieBadRequestException
     * @throws AnalyseProductionPaieUnauthorizedException
     * @throws AnalyseProductionPaieInternalServerErrorException
     */
    public function analyseProductionPaie(AnalyseProductionPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseProductionPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws AnalyseProductionPaieAsynchroneBadRequestException
     * @throws AnalyseProductionPaieAsynchroneUnauthorizedException
     * @throws AnalyseProductionPaieAsynchroneInternalServerErrorException
     */
    public function analyseProductionPaieAsynchrone(AnalyseProductionPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseProductionPaieAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAnalyseProductionPaieAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutAnalyseProductionPaieAsynchroneBadRequestException
     * @throws StatutAnalyseProductionPaieAsynchroneUnauthorizedException
     * @throws StatutAnalyseProductionPaieAsynchroneInternalServerErrorException
     */
    public function statutAnalyseProductionPaieAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutAnalyseProductionPaieAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AnalyseProductionPaieDetailResponse|ResponseInterface|null
     *
     * @throws AnalyseProductionPaieDetailBadRequestException
     * @throws AnalyseProductionPaieDetailUnauthorizedException
     * @throws AnalyseProductionPaieDetailInternalServerErrorException
     */
    public function analyseProductionPaieDetail(AnalyseProductionPaieDetailRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseProductionPaieDetail($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AnalyseProductionPaieUtilisateursResponse|ResponseInterface|null
     *
     * @throws AnalyseProductionPaieUtilisateursBadRequestException
     * @throws AnalyseProductionPaieUtilisateursUnauthorizedException
     * @throws AnalyseProductionPaieUtilisateursInternalServerErrorException
     */
    public function analyseProductionPaieUtilisateurs(AnalyseProductionPaieUtilisateursRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseProductionPaieUtilisateurs($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AnalyseProductionPaieEntreesSortiesResponse|ResponseInterface|null
     *
     * @throws AnalyseProductionPaieEntreesSortiesBadRequestException
     * @throws AnalyseProductionPaieEntreesSortiesUnauthorizedException
     * @throws AnalyseProductionPaieEntreesSortiesInternalServerErrorException
     */
    public function analyseProductionPaieEntreesSorties(AnalyseProductionPaieEntreesSortiesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseProductionPaieEntreesSorties($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws AnalyseProductionPaieEntreesSortiesAsynchroneBadRequestException
     * @throws AnalyseProductionPaieEntreesSortiesAsynchroneUnauthorizedException
     * @throws AnalyseProductionPaieEntreesSortiesAsynchroneInternalServerErrorException
     */
    public function analyseProductionPaieEntreesSortiesAsynchrone(AnalyseProductionPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AnalyseProductionPaieEntreesSortiesAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAnalyseProductionPaieEntreesSortiesAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutAnalyseProductionPaieEntreesSortiesAsynchroneBadRequestException
     * @throws StatutAnalyseProductionPaieEntreesSortiesAsynchroneUnauthorizedException
     * @throws StatutAnalyseProductionPaieEntreesSortiesAsynchroneInternalServerErrorException
     */
    public function statutAnalyseProductionPaieEntreesSortiesAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutAnalyseProductionPaieEntreesSortiesAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return BureautiquePaieNombreDocumentsCreesResponse|ResponseInterface|null
     *
     * @throws BureautiquePaieNombreDocumentsCreesBadRequestException
     * @throws BureautiquePaieNombreDocumentsCreesUnauthorizedException
     * @throws BureautiquePaieNombreDocumentsCreesInternalServerErrorException
     */
    public function bureautiquePaieNombreDocumentsCrees(BureautiquePaieNombreDocumentsCreesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new BureautiquePaieNombreDocumentsCrees($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeModulesActifsResponse|ResponseInterface|null
     *
     * @throws ListeModulesActifsBadRequestException
     * @throws ListeModulesActifsUnauthorizedException
     * @throws ListeModulesActifsInternalServerErrorException
     */
    public function listeModulesActifs(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeModulesActifs($headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureAxesAnalytiquesResponse|ResponseInterface|null
     *
     * @throws LectureAxesAnalytiquesBadRequestException
     * @throws LectureAxesAnalytiquesUnauthorizedException
     * @throws LectureAxesAnalytiquesInternalServerErrorException
     */
    public function lectureAxesAnalytiques(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureAxesAnalytiques($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                 $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws AjoutSousCategorieAxeAnalytiqueBadRequestException
     * @throws AjoutSousCategorieAxeAnalytiqueUnauthorizedException
     * @throws AjoutSousCategorieAxeAnalytiqueInternalServerErrorException
     */
    public function ajoutSousCategorieAxeAnalytique(AjoutSousCategorieAxeAnalytiqueRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AjoutSousCategorieAxeAnalytique($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureAxesAnalytiquesSalariesResponse|ResponseInterface|null
     *
     * @throws LectureAxesAnalytiquesSalariesBadRequestException
     * @throws LectureAxesAnalytiquesSalariesUnauthorizedException
     * @throws LectureAxesAnalytiquesSalariesInternalServerErrorException
     */
    public function lectureAxesAnalytiquesSalaries(LectureAxesAnalytiquesSalariesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureAxesAnalytiquesSalaries($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EmploiClassificationMetier|ResponseInterface|null
     *
     * @throws SalarieEmploiClassificationMetierBadRequestException
     * @throws SalarieEmploiClassificationMetierUnauthorizedException
     * @throws SalarieEmploiClassificationMetierInternalServerErrorException
     */
    public function salarieEmploiClassificationMetier(SalarieEmploiClassificationMetierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieEmploiClassificationMetier($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ClassificationMetierCompleteResponse|ResponseInterface|null
     *
     * @throws ClassificationMetierCompleteBadRequestException
     * @throws ClassificationMetierCompleteUnauthorizedException
     * @throws ClassificationMetierCompleteInternalServerErrorException
     */
    public function classificationMetierComplete(ClassificationMetierCompleteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ClassificationMetierComplete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws AjouteCompteRenduEdiBadRequestException
     * @throws AjouteCompteRenduEdiUnauthorizedException
     * @throws AjouteCompteRenduEdiInternalServerErrorException
     */
    public function ajouteCompteRenduEdi(AjouteCompteRenduEdiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AjouteCompteRenduEdi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AjouteCompteRenduEdi94Response|ResponseInterface|null
     *
     * @throws AjouteCompteRenduEdi94BadRequestException
     * @throws AjouteCompteRenduEdi94UnauthorizedException
     * @throws AjouteCompteRenduEdi94InternalServerErrorException
     */
    public function ajouteCompteRenduEdi94(AjouteCompteRenduEdi94Request $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AjouteCompteRenduEdi94($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws CreationEmetteurDSNBadRequestException
     * @throws CreationEmetteurDSNUnauthorizedException
     * @throws CreationEmetteurDSNInternalServerErrorException
     */
    public function creationEmetteurDSN(CreationEmetteurDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationEmetteurDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureContactEmetteurDSNResponse|ResponseInterface|null
     *
     * @throws LectureContactEmetteurDSNBadRequestException
     * @throws LectureContactEmetteurDSNUnauthorizedException
     * @throws LectureContactEmetteurDSNInternalServerErrorException
     */
    public function lectureContactEmetteurDSN(LectureContactEmetteurDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureContactEmetteurDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ImportXmlParametrageOrganismeDSNResponse|ResponseInterface|null
     *
     * @throws ImportXmlParametrageOrganismeDSNBadRequestException
     * @throws ImportXmlParametrageOrganismeDSNUnauthorizedException
     * @throws ImportXmlParametrageOrganismeDSNInternalServerErrorException
     */
    public function importXmlParametrageOrganismeDSN(ImportXmlParametrageOrganismeDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ImportXmlParametrageOrganismeDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws InitialisationAncienNumeroContratDSNBadRequestException
     * @throws InitialisationAncienNumeroContratDSNUnauthorizedException
     * @throws InitialisationAncienNumeroContratDSNInternalServerErrorException
     */
    public function initialisationAncienNumeroContratDSN(InitialisationAncienNumeroContratDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new InitialisationAncienNumeroContratDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ActivationDSNBadRequestException
     * @throws ActivationDSNUnauthorizedException
     * @throws ActivationDSNInternalServerErrorException
     */
    public function activationDSN(ActivationDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ActivationDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ValideCleDossierBadRequestException
     * @throws ValideCleDossierUnauthorizedException
     * @throws ValideCleDossierInternalServerErrorException
     */
    public function valideCleDossier(ValideCleDossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ValideCleDossier($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws CreationUtilisateurClientPaieBadRequestException
     * @throws CreationUtilisateurClientPaieUnauthorizedException
     * @throws CreationUtilisateurClientPaieInternalServerErrorException
     */
    public function creationUtilisateurClientPaie(CreationUtilisateurClientPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationUtilisateurClientPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeUtilisateursDossierPaieResponse|ResponseInterface|null
     *
     * @throws ListeUtilisateursDossierPaieBadRequestException
     * @throws ListeUtilisateursDossierPaieUnauthorizedException
     * @throws ListeUtilisateursDossierPaieInternalServerErrorException
     */
    public function listeUtilisateursDossierPaie(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeUtilisateursDossierPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AcquisitionQuestionnaireContratComplementaireResponse|ResponseInterface|null
     *
     * @throws AcquisitionQuestionnaireContratComplementaireBadRequestException
     * @throws AcquisitionQuestionnaireContratComplementaireUnauthorizedException
     * @throws AcquisitionQuestionnaireContratComplementaireInternalServerErrorException
     */
    public function acquisitionQuestionnaireContratComplementaire(AcquisitionQuestionnaireContratComplementaireRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AcquisitionQuestionnaireContratComplementaire($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return QuestionnaireContratComplementaire|ResponseInterface|null
     *
     * @throws CreationQuestionnaireContratComplementaireBadRequestException
     * @throws CreationQuestionnaireContratComplementaireUnauthorizedException
     * @throws CreationQuestionnaireContratComplementaireInternalServerErrorException
     */
    public function creationQuestionnaireContratComplementaire(CreationQuestionnaireContratComplementaireRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationQuestionnaireContratComplementaire($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ControlerBulletinsPeriodeResponse|ResponseInterface|null
     *
     * @throws ControlerBulletinsPeriodeBadRequestException
     * @throws ControlerBulletinsPeriodeUnauthorizedException
     * @throws ControlerBulletinsPeriodeInternalServerErrorException
     */
    public function controlerBulletinsPeriode(ControlerBulletinsPeriodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ControlerBulletinsPeriode($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return CreationDossierPaieResponse|ResponseInterface|null
     *
     * @throws CreationDossierPaieBadRequestException
     * @throws CreationDossierPaieUnauthorizedException
     * @throws CreationDossierPaieInternalServerErrorException
     */
    public function creationDossierPaie(CreationDossierPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationDossierPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RetourImportDSN|ResponseInterface|null
     *
     * @throws ImportFichierDSNBadRequestException
     * @throws ImportFichierDSNUnauthorizedException
     * @throws ImportFichierDSNInternalServerErrorException
     */
    public function importFichierDSN(ImportFichierDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ImportFichierDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                    $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RetourImportDSN|ResponseInterface|null
     *
     * @throws CreationDossierParImportFichierDSNBadRequestException
     * @throws CreationDossierParImportFichierDSNUnauthorizedException
     * @throws CreationDossierParImportFichierDSNInternalServerErrorException
     */
    public function creationDossierParImportFichierDSN(CreationDossierParImportFichierDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationDossierParImportFichierDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                          $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieInitialiserCumulsBadRequestException
     * @throws SalarieInitialiserCumulsUnauthorizedException
     * @throws SalarieInitialiserCumulsInternalServerErrorException
     */
    public function salarieInitialiserCumuls(SalarieInitialiserCumulsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieInitialiserCumuls($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererDeclarationsResponse|ResponseInterface|null
     *
     * @throws RecupererDeclarationsBadRequestException
     * @throws RecupererDeclarationsUnauthorizedException
     * @throws RecupererDeclarationsInternalServerErrorException
     */
    public function recupererDeclarations(DossierPeriodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererDeclarations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws RecupererDeclarationsAsynchroneBadRequestException
     * @throws RecupererDeclarationsAsynchroneUnauthorizedException
     * @throws RecupererDeclarationsAsynchroneInternalServerErrorException
     */
    public function recupererDeclarationsAsynchrone(DossierPeriodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererDeclarationsAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutRecupererDeclarationsAsynchroneBadRequestException
     * @throws StatutRecupererDeclarationsAsynchroneUnauthorizedException
     * @throws StatutRecupererDeclarationsAsynchroneInternalServerErrorException
     */
    public function statutRecupererDeclarationsAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutRecupererDeclarationsAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EcrituresComptables|ResponseInterface|null
     *
     * @throws EcrituresComptablesBadRequestException
     * @throws EcrituresComptablesUnauthorizedException
     * @throws EcrituresComptablesInternalServerErrorException
     */
    public function ecrituresComptables(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new \QdequippeTech\Silae\Api\Endpoint\EcrituresComptables($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EcrituresComptables|ResponseInterface|null
     *
     * @throws EcrituresComptables2BadRequestException
     * @throws EcrituresComptables2UnauthorizedException
     * @throws EcrituresComptables2InternalServerErrorException
     */
    public function ecrituresComptables2(EcrituresComptables2Request $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EcrituresComptables2($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EcrituresComptables|ResponseInterface|null
     *
     * @throws EcrituresComptables3BadRequestException
     * @throws EcrituresComptables3UnauthorizedException
     * @throws EcrituresComptables3InternalServerErrorException
     */
    public function ecrituresComptables3(EcrituresComptables3Request $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EcrituresComptables3($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EcrituresComptablesAsynchroneBadRequestException
     * @throws EcrituresComptablesAsynchroneUnauthorizedException
     * @throws EcrituresComptablesAsynchroneInternalServerErrorException
     */
    public function ecrituresComptablesAsynchrone(EcrituresComptables3Request $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EcrituresComptablesAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutEcrituresComptablesAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutEcrituresComptablesAsynchroneBadRequestException
     * @throws StatutEcrituresComptablesAsynchroneUnauthorizedException
     * @throws StatutEcrituresComptablesAsynchroneInternalServerErrorException
     */
    public function statutEcrituresComptablesAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEcrituresComptablesAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererFichiersEcrituresComptablesResponse|ResponseInterface|null
     *
     * @throws RecupererFichiersEcrituresComptablesBadRequestException
     * @throws RecupererFichiersEcrituresComptablesUnauthorizedException
     * @throws RecupererFichiersEcrituresComptablesInternalServerErrorException
     */
    public function recupererFichiersEcrituresComptables(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererFichiersEcrituresComptables($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SoldeRepos|ResponseInterface|null
     *
     * @throws SoldeReposBadRequestException
     * @throws SoldeReposUnauthorizedException
     * @throws SoldeReposInternalServerErrorException
     */
    public function soldeRepos(DossierPeriodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new \QdequippeTech\Silae\Api\Endpoint\SoldeRepos($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws SoldeReposAsynchroneBadRequestException
     * @throws SoldeReposAsynchroneUnauthorizedException
     * @throws SoldeReposAsynchroneInternalServerErrorException
     */
    public function soldeReposAsynchrone(DossierPeriodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SoldeReposAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutSoldeReposResponse|ResponseInterface|null
     *
     * @throws StatutSoldeReposAsynchroneBadRequestException
     * @throws StatutSoldeReposAsynchroneUnauthorizedException
     * @throws StatutSoldeReposAsynchroneInternalServerErrorException
     */
    public function statutSoldeReposAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutSoldeReposAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionJournalDePaieResponse|ResponseInterface|null
     *
     * @throws EditionJournalDePaieBadRequestException
     * @throws EditionJournalDePaieUnauthorizedException
     * @throws EditionJournalDePaieInternalServerErrorException
     */
    public function editionJournalDePaie(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionJournalDePaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionJournalDePaieAsynchroneBadRequestException
     * @throws EditionJournalDePaieAsynchroneUnauthorizedException
     * @throws EditionJournalDePaieAsynchroneInternalServerErrorException
     */
    public function editionJournalDePaieAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionJournalDePaieAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionJournalDePaieAsynchroneBadRequestException
     * @throws StatutEditionJournalDePaieAsynchroneUnauthorizedException
     * @throws StatutEditionJournalDePaieAsynchroneInternalServerErrorException
     */
    public function statutEditionJournalDePaieAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionJournalDePaieAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionTableauDesChargesResponse|ResponseInterface|null
     *
     * @throws EditionTableauDesChargesBadRequestException
     * @throws EditionTableauDesChargesUnauthorizedException
     * @throws EditionTableauDesChargesInternalServerErrorException
     */
    public function editionTableauDesCharges(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionTableauDesCharges($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionTableauDesChargesAsynchroneBadRequestException
     * @throws EditionTableauDesChargesAsynchroneUnauthorizedException
     * @throws EditionTableauDesChargesAsynchroneInternalServerErrorException
     */
    public function editionTableauDesChargesAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionTableauDesChargesAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionTableauDesChargesAsynchroneBadRequestException
     * @throws StatutEditionTableauDesChargesAsynchroneUnauthorizedException
     * @throws StatutEditionTableauDesChargesAsynchroneInternalServerErrorException
     */
    public function statutEditionTableauDesChargesAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionTableauDesChargesAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionEtatDesPaiementsResponse|ResponseInterface|null
     *
     * @throws EditionEtatDesPaiementsBadRequestException
     * @throws EditionEtatDesPaiementsUnauthorizedException
     * @throws EditionEtatDesPaiementsInternalServerErrorException
     */
    public function editionEtatDesPaiements(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionEtatDesPaiements($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionEtatDesPaiementsAsynchroneBadRequestException
     * @throws EditionEtatDesPaiementsAsynchroneUnauthorizedException
     * @throws EditionEtatDesPaiementsAsynchroneInternalServerErrorException
     */
    public function editionEtatDesPaiementsAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionEtatDesPaiementsAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionEtatDesPaiementsAsynchroneBadRequestException
     * @throws StatutEditionEtatDesPaiementsAsynchroneUnauthorizedException
     * @throws StatutEditionEtatDesPaiementsAsynchroneInternalServerErrorException
     */
    public function statutEditionEtatDesPaiementsAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionEtatDesPaiementsAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionRecapDePaieResponse|ResponseInterface|null
     *
     * @throws EditionRecapDePaieBadRequestException
     * @throws EditionRecapDePaieUnauthorizedException
     * @throws EditionRecapDePaieInternalServerErrorException
     */
    public function editionRecapDePaie(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionRecapDePaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionRecapDePaieAsynchroneBadRequestException
     * @throws EditionRecapDePaieAsynchroneUnauthorizedException
     * @throws EditionRecapDePaieAsynchroneInternalServerErrorException
     */
    public function editionRecapDePaieAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionRecapDePaieAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionRecapDePaieAsynchroneBadRequestException
     * @throws StatutEditionRecapDePaieAsynchroneUnauthorizedException
     * @throws StatutEditionRecapDePaieAsynchroneInternalServerErrorException
     */
    public function statutEditionRecapDePaieAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionRecapDePaieAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionSoldeDeReposResponse|ResponseInterface|null
     *
     * @throws EditionSoldeDeReposBadRequestException
     * @throws EditionSoldeDeReposUnauthorizedException
     * @throws EditionSoldeDeReposInternalServerErrorException
     */
    public function editionSoldeDeRepos(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionSoldeDeRepos($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionSoldeDeReposAsynchroneBadRequestException
     * @throws EditionSoldeDeReposAsynchroneUnauthorizedException
     * @throws EditionSoldeDeReposAsynchroneInternalServerErrorException
     */
    public function editionSoldeDeReposAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionSoldeDeReposAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionSoldeDeReposAsynchroneBadRequestException
     * @throws StatutEditionSoldeDeReposAsynchroneUnauthorizedException
     * @throws StatutEditionSoldeDeReposAsynchroneInternalServerErrorException
     */
    public function statutEditionSoldeDeReposAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionSoldeDeReposAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionControleCICEResponse|ResponseInterface|null
     *
     * @throws EditionControleCICEBadRequestException
     * @throws EditionControleCICEUnauthorizedException
     * @throws EditionControleCICEInternalServerErrorException
     */
    public function editionControleCICE(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionControleCICE($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionControleCICEAsynchroneBadRequestException
     * @throws EditionControleCICEAsynchroneUnauthorizedException
     * @throws EditionControleCICEAsynchroneInternalServerErrorException
     */
    public function editionControleCICEAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionControleCICEAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionControleCICEAsynchroneBadRequestException
     * @throws StatutEditionControleCICEAsynchroneUnauthorizedException
     * @throws StatutEditionControleCICEAsynchroneInternalServerErrorException
     */
    public function statutEditionControleCICEAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionControleCICEAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionDetailDesCotisationsResponse|ResponseInterface|null
     *
     * @throws EditionDetailDesCotisationsBadRequestException
     * @throws EditionDetailDesCotisationsUnauthorizedException
     * @throws EditionDetailDesCotisationsInternalServerErrorException
     */
    public function editionDetailDesCotisations(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionDetailDesCotisations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionDetailDesCotisationsAsynchroneBadRequestException
     * @throws EditionDetailDesCotisationsAsynchroneUnauthorizedException
     * @throws EditionDetailDesCotisationsAsynchroneInternalServerErrorException
     */
    public function editionDetailDesCotisationsAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionDetailDesCotisationsAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionDetailDesCotisationsAsynchroneBadRequestException
     * @throws StatutEditionDetailDesCotisationsAsynchroneUnauthorizedException
     * @throws StatutEditionDetailDesCotisationsAsynchroneInternalServerErrorException
     */
    public function statutEditionDetailDesCotisationsAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionDetailDesCotisationsAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionCoutsSalariauxResponse|ResponseInterface|null
     *
     * @throws EditionCoutsSalariauxBadRequestException
     * @throws EditionCoutsSalariauxUnauthorizedException
     * @throws EditionCoutsSalariauxInternalServerErrorException
     */
    public function editionCoutsSalariaux(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionCoutsSalariaux($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionCoutsSalariauxAsynchroneBadRequestException
     * @throws EditionCoutsSalariauxAsynchroneUnauthorizedException
     * @throws EditionCoutsSalariauxAsynchroneInternalServerErrorException
     */
    public function editionCoutsSalariauxAsynchrone(DossierPeriodeRangeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionCoutsSalariauxAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionCoutsSalariauxAsynchroneBadRequestException
     * @throws StatutEditionCoutsSalariauxAsynchroneUnauthorizedException
     * @throws StatutEditionCoutsSalariauxAsynchroneInternalServerErrorException
     */
    public function statutEditionCoutsSalariauxAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionCoutsSalariauxAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return GenererFichierTRResponse|ResponseInterface|null
     *
     * @throws GenerationFichierTRBadRequestException
     * @throws GenerationFichierTRUnauthorizedException
     * @throws GenerationFichierTRInternalServerErrorException
     */
    public function generationFichierTR(GenerationFichierTRRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new GenerationFichierTR($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EditionHistoriqueResponse|ResponseInterface|null
     *
     * @throws EditionHistoriqueBadRequestException
     * @throws EditionHistoriqueUnauthorizedException
     * @throws EditionHistoriqueInternalServerErrorException
     */
    public function editionHistorique(EditionHistoriqueRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionHistorique($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws EditionHistoriqueAsynchroneBadRequestException
     * @throws EditionHistoriqueAsynchroneUnauthorizedException
     * @throws EditionHistoriqueAsynchroneInternalServerErrorException
     */
    public function editionHistoriqueAsynchrone(EditionHistoriqueRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EditionHistoriqueAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutEditionHistoriqueAsynchroneBadRequestException
     * @throws StatutEditionHistoriqueAsynchroneUnauthorizedException
     * @throws StatutEditionHistoriqueAsynchroneInternalServerErrorException
     */
    public function statutEditionHistoriqueAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutEditionHistoriqueAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterPrimeBadRequestException
     * @throws SalarieAjouterPrimeUnauthorizedException
     * @throws SalarieAjouterPrimeInternalServerErrorException
     */
    public function salarieAjouterPrime(SalarieAjouterPrimeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterPrime($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterPrimeSurEmploiBadRequestException
     * @throws SalarieAjouterPrimeSurEmploiUnauthorizedException
     * @throws SalarieAjouterPrimeSurEmploiInternalServerErrorException
     */
    public function salarieAjouterPrimeSurEmploi(SalarieAjouterPrimeSurEmploiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterPrimeSurEmploi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterElementVariableBadRequestException
     * @throws SalarieAjouterElementVariableUnauthorizedException
     * @throws SalarieAjouterElementVariableInternalServerErrorException
     */
    public function salarieAjouterElementVariable(SalarieAjouterElementVariableRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterElementVariable($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterElementVariableSurEmploiBadRequestException
     * @throws SalarieAjouterElementVariableSurEmploiUnauthorizedException
     * @throws SalarieAjouterElementVariableSurEmploiInternalServerErrorException
     */
    public function salarieAjouterElementVariableSurEmploi(SalarieAjouterElementVariableSurEmploiRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterElementVariableSurEmploi($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieAjouterAcompteBadRequestException
     * @throws SalarieAjouterAcompteUnauthorizedException
     * @throws SalarieAjouterAcompteInternalServerErrorException
     */
    public function salarieAjouterAcompte(SalarieAjouterAcompteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieAjouterAcompte($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                          $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalariesConfirmerSaisiesResponse|ResponseInterface|null
     *
     * @throws SalariesConfirmerSaisiesBadRequestException
     * @throws SalariesConfirmerSaisiesUnauthorizedException
     * @throws SalariesConfirmerSaisiesInternalServerErrorException
     */
    public function salariesConfirmerSaisies(SalariesConfirmerSaisiesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalariesConfirmerSaisies($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                          $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws SalariesConfirmerSaisiesAsynchroneBadRequestException
     * @throws SalariesConfirmerSaisiesAsynchroneUnauthorizedException
     * @throws SalariesConfirmerSaisiesAsynchroneInternalServerErrorException
     */
    public function salariesConfirmerSaisiesAsynchrone(SalariesConfirmerSaisiesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalariesConfirmerSaisiesAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutSalariesConfirmerSaisiesResponse|ResponseInterface|null
     *
     * @throws StatutSalariesConfirmerSaisiesAsynchroneBadRequestException
     * @throws StatutSalariesConfirmerSaisiesAsynchroneUnauthorizedException
     * @throws StatutSalariesConfirmerSaisiesAsynchroneInternalServerErrorException
     */
    public function statutSalariesConfirmerSaisiesAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutSalariesConfirmerSaisiesAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EtatDeclarationsResponse|ResponseInterface|null
     *
     * @throws EtatDeclarationsBadRequestException
     * @throws EtatDeclarationsUnauthorizedException
     * @throws EtatDeclarationsInternalServerErrorException
     */
    public function etatDeclarations(EtatDeclarationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EtatDeclarations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeEtablissementsDossierPaieResponse|ResponseInterface|null
     *
     * @throws ListeEtablissementsDossierPaieBadRequestException
     * @throws ListeEtablissementsDossierPaieUnauthorizedException
     * @throws ListeEtablissementsDossierPaieInternalServerErrorException
     */
    public function listeEtablissementsDossierPaie(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeEtablissementsDossierPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EtablissementsAExclureCVAEResponse|ResponseInterface|null
     *
     * @throws EtablissementsAExclureCVAEBadRequestException
     * @throws EtablissementsAExclureCVAEUnauthorizedException
     * @throws EtablissementsAExclureCVAEInternalServerErrorException
     */
    public function etablissementsAExclureCVAE(EtablissementsAExclureCVAERequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new EtablissementsAExclureCVAE($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws MiseAJourFicheSocieteBadRequestException
     * @throws MiseAJourFicheSocieteUnauthorizedException
     * @throws MiseAJourFicheSocieteInternalServerErrorException
     */
    public function miseAJourFicheSociete(MiseAJourFicheSocieteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new MiseAJourFicheSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws MiseAJourFicheEtablissementBadRequestException
     * @throws MiseAJourFicheEtablissementUnauthorizedException
     * @throws MiseAJourFicheEtablissementInternalServerErrorException
     */
    public function miseAJourFicheEtablissement(MiseAJourFicheEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new MiseAJourFicheEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationEffectifSocieteBadRequestException
     * @throws ModificationEffectifSocieteUnauthorizedException
     * @throws ModificationEffectifSocieteInternalServerErrorException
     */
    public function modificationEffectifSociete(ModificationEffectifSocieteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationEffectifSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationCCNSocieteBadRequestException
     * @throws ModificationCCNSocieteUnauthorizedException
     * @throws ModificationCCNSocieteInternalServerErrorException
     */
    public function modificationCCNSociete(ModificationCCNSocieteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationCCNSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationEffortConstructionBadRequestException
     * @throws ModificationEffortConstructionUnauthorizedException
     * @throws ModificationEffortConstructionInternalServerErrorException
     */
    public function modificationEffortConstruction(ModificationEffortConstructionRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationEffortConstruction($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationFNALBadRequestException
     * @throws ModificationFNALUnauthorizedException
     * @throws ModificationFNALInternalServerErrorException
     */
    public function modificationFNAL(ModificationFNALRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationFNAL($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationInformationBancaireSocieteBadRequestException
     * @throws ModificationInformationBancaireSocieteUnauthorizedException
     * @throws ModificationInformationBancaireSocieteInternalServerErrorException
     */
    public function modificationInformationBancaireSociete(ModificationInformationBancaireSocieteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationInformationBancaireSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationTaxeTransportBadRequestException
     * @throws ModificationTaxeTransportUnauthorizedException
     * @throws ModificationTaxeTransportInternalServerErrorException
     */
    public function modificationTaxeTransport(ModificationTaxeTransportRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationTaxeTransport($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ModificationTaxeApprentissageEtablissementResponse|ResponseInterface|null
     *
     * @throws ModificationTaxeApprentissageEtablissementBadRequestException
     * @throws ModificationTaxeApprentissageEtablissementUnauthorizedException
     * @throws ModificationTaxeApprentissageEtablissementInternalServerErrorException
     */
    public function modificationTaxeApprentissageEtablissement(ModificationTaxeApprentissageEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationTaxeApprentissageEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ModificationTaxeApprentissageSocieteResponse|ResponseInterface|null
     *
     * @throws ModificationTaxeApprentissageSocieteBadRequestException
     * @throws ModificationTaxeApprentissageSocieteUnauthorizedException
     * @throws ModificationTaxeApprentissageSocieteInternalServerErrorException
     */
    public function modificationTaxeApprentissageSociete(ModificationTaxeApprentissageSocieteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationTaxeApprentissageSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationEffectifEtablissementBadRequestException
     * @throws ModificationEffectifEtablissementUnauthorizedException
     * @throws ModificationEffectifEtablissementInternalServerErrorException
     */
    public function modificationEffectifEtablissement(ModificationEffectifEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationEffectifEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationQuestionnaireCCNEtablissementBadRequestException
     * @throws ModificationQuestionnaireCCNEtablissementUnauthorizedException
     * @throws ModificationQuestionnaireCCNEtablissementInternalServerErrorException
     */
    public function modificationQuestionnaireCCNEtablissement(ModificationQuestionnaireCCNEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationQuestionnaireCCNEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationGrilleHoraireEtablissementBadRequestException
     * @throws ModificationGrilleHoraireEtablissementUnauthorizedException
     * @throws ModificationGrilleHoraireEtablissementInternalServerErrorException
     */
    public function modificationGrilleHoraireEtablissement(ModificationGrilleHoraireEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationGrilleHoraireEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureEffectifSocieteResponse|ResponseInterface|null
     *
     * @throws LectureEffectifSocieteBadRequestException
     * @throws LectureEffectifSocieteUnauthorizedException
     * @throws LectureEffectifSocieteInternalServerErrorException
     */
    public function lectureEffectifSociete(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureEffectifSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureCCNSocieteResponse|ResponseInterface|null
     *
     * @throws LectureCCNSocieteBadRequestException
     * @throws LectureCCNSocieteUnauthorizedException
     * @throws LectureCCNSocieteInternalServerErrorException
     */
    public function lectureCCNSociete(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureCCNSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return EffortConstruction|ResponseInterface|null
     *
     * @throws LectureEffortConstructionBadRequestException
     * @throws LectureEffortConstructionUnauthorizedException
     * @throws LectureEffortConstructionInternalServerErrorException
     */
    public function lectureEffortConstruction(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureEffortConstruction($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return FNAL|ResponseInterface|null
     *
     * @throws LectureFNALBadRequestException
     * @throws LectureFNALUnauthorizedException
     * @throws LectureFNALInternalServerErrorException
     */
    public function lectureFNAL(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureFNAL($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureInformationBancaireSocieteResponse|ResponseInterface|null
     *
     * @throws LectureInformationBancaireSocieteBadRequestException
     * @throws LectureInformationBancaireSocieteUnauthorizedException
     * @throws LectureInformationBancaireSocieteInternalServerErrorException
     */
    public function lectureInformationBancaireSociete(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureInformationBancaireSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureTaxeTransportResponse|ResponseInterface|null
     *
     * @throws LectureTaxeTransportBadRequestException
     * @throws LectureTaxeTransportUnauthorizedException
     * @throws LectureTaxeTransportInternalServerErrorException
     */
    public function lectureTaxeTransport(LectureTaxeTransportRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureTaxeTransport($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                 $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureTaxeApprentissageSocieteResponse|ResponseInterface|null
     *
     * @throws LectureTaxeApprentissageSocieteBadRequestException
     * @throws LectureTaxeApprentissageSocieteUnauthorizedException
     * @throws LectureTaxeApprentissageSocieteInternalServerErrorException
     */
    public function lectureTaxeApprentissageSociete(LectureTaxeApprentissageSocieteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureTaxeApprentissageSociete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureTaxeApprentissageEtablissementResponse|ResponseInterface|null
     *
     * @throws LectureTaxeApprentissageEtablissementBadRequestException
     * @throws LectureTaxeApprentissageEtablissementUnauthorizedException
     * @throws LectureTaxeApprentissageEtablissementInternalServerErrorException
     */
    public function lectureTaxeApprentissageEtablissement(LectureTaxeApprentissageEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureTaxeApprentissageEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureEffectifEtablissementResponse|ResponseInterface|null
     *
     * @throws LectureEffectifEtablissementBadRequestException
     * @throws LectureEffectifEtablissementUnauthorizedException
     * @throws LectureEffectifEtablissementInternalServerErrorException
     */
    public function lectureEffectifEtablissement(LectureEffectifEtablissementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureEffectifEtablissement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieRecupererDUEResponse|ResponseInterface|null
     *
     * @throws SalarieRecupererDUEBadRequestException
     * @throws SalarieRecupererDUEUnauthorizedException
     * @throws SalarieRecupererDUEInternalServerErrorException
     */
    public function salarieRecupererDUE(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieRecupererDUE($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieRecupererRecuDPAEResponse|ResponseInterface|null
     *
     * @throws SalarieRecupererRecuDPAEBadRequestException
     * @throws SalarieRecupererRecuDPAEUnauthorizedException
     * @throws SalarieRecupererRecuDPAEInternalServerErrorException
     */
    public function salarieRecupererRecuDPAE(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieRecupererRecuDPAE($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieDUEBadRequestException
     * @throws SalarieDUEUnauthorizedException
     * @throws SalarieDUEInternalServerErrorException
     */
    public function salarieDUE(SalarieDUERequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieDUE($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws SalarieDUEAsynchroneBadRequestException
     * @throws SalarieDUEAsynchroneUnauthorizedException
     * @throws SalarieDUEAsynchroneInternalServerErrorException
     */
    public function salarieDUEAsynchrone(SalarieDUERequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieDUEAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutSalariesDUEAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutSalarieDUEAsynchroneBadRequestException
     * @throws StatutSalarieDUEAsynchroneUnauthorizedException
     * @throws StatutSalarieDUEAsynchroneInternalServerErrorException
     */
    public function statutSalarieDUEAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutSalarieDUEAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalariesDUEResponse|ResponseInterface|null
     *
     * @throws SalariesDUEBadRequestException
     * @throws SalariesDUEUnauthorizedException
     * @throws SalariesDUEInternalServerErrorException
     */
    public function salariesDUE(SalariesDUERequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalariesDUE($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RechercheCCNResponse|ResponseInterface|null
     *
     * @throws RechercheCCNBadRequestException
     * @throws RechercheCCNUnauthorizedException
     * @throws RechercheCCNInternalServerErrorException
     */
    public function rechercheCCN(RechercheCCNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RechercheCCN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return CCN|ResponseInterface|null
     *
     * @throws RechercheCCNParCodeBadRequestException
     * @throws RechercheCCNParCodeUnauthorizedException
     * @throws RechercheCCNParCodeInternalServerErrorException
     */
    public function rechercheCCNParCode(RechercheCCNParCodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RechercheCCNParCode($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieBulletinEnteteResult|ResponseInterface|null
     *
     * @throws SalarieBulletinEnteteBadRequestException
     * @throws SalarieBulletinEnteteUnauthorizedException
     * @throws SalarieBulletinEnteteInternalServerErrorException
     */
    public function salarieBulletinEntete(SalarieBulletinEnteteRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieBulletinEntete($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieBulletinLignesResult|ResponseInterface|null
     *
     * @throws SalarieBulletinLignesBadRequestException
     * @throws SalarieBulletinLignesUnauthorizedException
     * @throws SalarieBulletinLignesInternalServerErrorException
     */
    public function salarieBulletinLignes(SalarieBulletinLignesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieBulletinLignes($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieBulletinLignesResult|ResponseInterface|null
     *
     * @throws SalarieBulletinLignesSelonFiltresBadRequestException
     * @throws SalarieBulletinLignesSelonFiltresUnauthorizedException
     * @throws SalarieBulletinLignesSelonFiltresInternalServerErrorException
     */
    public function salarieBulletinLignesSelonFiltres(SalarieBulletinLignesSelonFiltresRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieBulletinLignesSelonFiltres($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieBulletinDetailsResult|ResponseInterface|null
     *
     * @throws SalarieBulletinDetailsBadRequestException
     * @throws SalarieBulletinDetailsUnauthorizedException
     * @throws SalarieBulletinDetailsInternalServerErrorException
     */
    public function salarieBulletinDetails(SalarieBulletinDetailsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieBulletinDetails($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieBulletinCumulsResult|ResponseInterface|null
     *
     * @throws SalarieBulletinCumulsBadRequestException
     * @throws SalarieBulletinCumulsUnauthorizedException
     * @throws SalarieBulletinCumulsInternalServerErrorException
     */
    public function salarieBulletinCumuls(SalarieBulletinCumulsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieBulletinCumuls($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalariesStockVarResponse|ResponseInterface|null
     *
     * @throws SalariesStockVarBadRequestException
     * @throws SalariesStockVarUnauthorizedException
     * @throws SalariesStockVarInternalServerErrorException
     */
    public function salariesStockVar(SalariesStockVarRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalariesStockVar($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeDSNMensuellesResponse|ResponseInterface|null
     *
     * @throws ListeDSNMensuellesBadRequestException
     * @throws ListeDSNMensuellesUnauthorizedException
     * @throws ListeDSNMensuellesInternalServerErrorException
     */
    public function listeDSNMensuelles(DossierPeriodeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeDSNMensuelles($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AcquisitionContenuPartielDSNResponse|ResponseInterface|null
     *
     * @throws AcquisitionContenuPartielDSNBadRequestException
     * @throws AcquisitionContenuPartielDSNUnauthorizedException
     * @throws AcquisitionContenuPartielDSNInternalServerErrorException
     */
    public function acquisitionContenuPartielDSN(AcquisitionContenuPartielDSNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AcquisitionContenuPartielDSN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                    $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RechercheDeclarationEvenementielleResponse|ResponseInterface|null
     *
     * @throws RechercheDeclarationEvenementielleBadRequestException
     * @throws RechercheDeclarationEvenementielleUnauthorizedException
     * @throws RechercheDeclarationEvenementielleInternalServerErrorException
     */
    public function rechercheDeclarationEvenementielle(RechercheDeclarationEvenementielleRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RechercheDeclarationEvenementielle($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieRecupererPeriodeDernierBulletinCalculeResponse|ResponseInterface|null
     *
     * @throws SalarieRecupererPeriodeDernierBulletinCalculeBadRequestException
     * @throws SalarieRecupererPeriodeDernierBulletinCalculeUnauthorizedException
     * @throws SalarieRecupererPeriodeDernierBulletinCalculeInternalServerErrorException
     */
    public function salarieRecupererPeriodeDernierBulletinCalcule(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieRecupererPeriodeDernierBulletinCalcule($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureInformationsPaieResponse|ResponseInterface|null
     *
     * @throws LectureInformationsPaieBadRequestException
     * @throws LectureInformationsPaieUnauthorizedException
     * @throws LectureInformationsPaieInternalServerErrorException
     */
    public function lectureInformationsPaie(LectureInformationsPaieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureInformationsPaie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalariesBulletinsResponse|ResponseInterface|null
     *
     * @throws SalariesBulletinsBadRequestException
     * @throws SalariesBulletinsUnauthorizedException
     * @throws SalariesBulletinsInternalServerErrorException
     */
    public function salariesBulletins(SalariesBulletinsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalariesBulletins($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws SalariesBulletinsAsynchroneBadRequestException
     * @throws SalariesBulletinsAsynchroneUnauthorizedException
     * @throws SalariesBulletinsAsynchroneInternalServerErrorException
     */
    public function salariesBulletinsAsynchrone(SalariesBulletinsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalariesBulletinsAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutSalariesBulletinsResponse|ResponseInterface|null
     *
     * @throws StatutSalariesBulletinsAsynchroneBadRequestException
     * @throws StatutSalariesBulletinsAsynchroneUnauthorizedException
     * @throws StatutSalariesBulletinsAsynchroneInternalServerErrorException
     */
    public function statutSalariesBulletinsAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutSalariesBulletinsAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeSalariesResponse|ResponseInterface|null
     *
     * @throws ListeSalariesBadRequestException
     * @throws ListeSalariesUnauthorizedException
     * @throws ListeSalariesInternalServerErrorException
     */
    public function listeSalaries(ListeSalariesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeSalaries($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeSalariesExternesResponse|ResponseInterface|null
     *
     * @throws ListeSalariesExternesBadRequestException
     * @throws ListeSalariesExternesUnauthorizedException
     * @throws ListeSalariesExternesInternalServerErrorException
     */
    public function listeSalariesExternes(ListeSalariesExternesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeSalariesExternes($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieSalaireDeBaseResult|ResponseInterface|null
     *
     * @throws SalarieSalaireDeBaseBadRequestException
     * @throws SalarieSalaireDeBaseUnauthorizedException
     * @throws SalarieSalaireDeBaseInternalServerErrorException
     */
    public function salarieSalaireDeBase(SalarieSalaireDeBaseRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieSalaireDeBase($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SalarieSyntheseCarriereResponse|ResponseInterface|null
     *
     * @throws SalarieSyntheseCarriereBadRequestException
     * @throws SalarieSyntheseCarriereUnauthorizedException
     * @throws SalarieSyntheseCarriereInternalServerErrorException
     */
    public function salarieSyntheseCarriere(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieSyntheseCarriere($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws SalarieSyntheseCarriereAsynchroneBadRequestException
     * @throws SalarieSyntheseCarriereAsynchroneUnauthorizedException
     * @throws SalarieSyntheseCarriereAsynchroneInternalServerErrorException
     */
    public function salarieSyntheseCarriereAsynchrone(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieSyntheseCarriereAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutSalarieSyntheseCarriereResponse|ResponseInterface|null
     *
     * @throws StatutSalarieSyntheseCarriereAsynchroneBadRequestException
     * @throws StatutSalarieSyntheseCarriereAsynchroneUnauthorizedException
     * @throws StatutSalarieSyntheseCarriereAsynchroneInternalServerErrorException
     */
    public function statutSalarieSyntheseCarriereAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutSalarieSyntheseCarriereAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LecturePersonnesLieesResponse|ResponseInterface|null
     *
     * @throws LecturePersonnesLieesBadRequestException
     * @throws LecturePersonnesLieesUnauthorizedException
     * @throws LecturePersonnesLieesInternalServerErrorException
     */
    public function lecturePersonnesLiees(DossierMatriculeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LecturePersonnesLiees($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureHandicapResponse|ResponseInterface|null
     *
     * @throws LectureHandicapBadRequestException
     * @throws LectureHandicapUnauthorizedException
     * @throws LectureHandicapInternalServerErrorException
     */
    public function lectureHandicap(DossierMatriculeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureHandicap($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureSalarieProtegeResponse|ResponseInterface|null
     *
     * @throws LectureSalarieProtegeBadRequestException
     * @throws LectureSalarieProtegeUnauthorizedException
     * @throws LectureSalarieProtegeInternalServerErrorException
     */
    public function lectureSalarieProtege(DossierMatriculeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureSalarieProtege($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureSaisieArretResponse|ResponseInterface|null
     *
     * @throws LectureSaisieArretBadRequestException
     * @throws LectureSaisieArretUnauthorizedException
     * @throws LectureSaisieArretInternalServerErrorException
     */
    public function lectureSaisieArret(DossierMatriculeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureSaisieArret($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeNumerosDossiersResponse|ResponseInterface|null
     *
     * @throws ListeNumerosDossiersBadRequestException
     * @throws ListeNumerosDossiersUnauthorizedException
     * @throws ListeNumerosDossiersInternalServerErrorException
     */
    public function listeNumerosDossiers(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeNumerosDossiers($headerParameters), $fetch);
    }

    /**
     * @param array                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeDossiersResponse|ResponseInterface|null
     *
     * @throws ListeDossiersBadRequestException
     * @throws ListeDossiersUnauthorizedException
     * @throws ListeDossiersInternalServerErrorException
     */
    public function listeDossiers(ListeDossiersRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeDossiers($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeInformationsDossiersPaieResponse|ResponseInterface|null
     *
     * @throws ListeInformationsDossiersPaieBadRequestException
     * @throws ListeInformationsDossiersPaieUnauthorizedException
     * @throws ListeInformationsDossiersPaieInternalServerErrorException
     */
    public function listeInformationsDossiersPaie(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeInformationsDossiersPaie($headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return DossierRecupererPeriodeEnCoursResponse|ResponseInterface|null
     *
     * @throws DossierRecupererPeriodeEnCoursBadRequestException
     * @throws DossierRecupererPeriodeEnCoursUnauthorizedException
     * @throws DossierRecupererPeriodeEnCoursInternalServerErrorException
     */
    public function dossierRecupererPeriodeEnCours(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new DossierRecupererPeriodeEnCours($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return MatriculeSalarieResponse|ResponseInterface|null
     *
     * @throws MatriculeSalarieBadRequestException
     * @throws MatriculeSalarieUnauthorizedException
     * @throws MatriculeSalarieInternalServerErrorException
     */
    public function matriculeSalarie(MatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new MatriculeSalarie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                          $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeMatriculesDupliquesResponse|ResponseInterface|null
     *
     * @throws ListeMatriculesDupliquesBadRequestException
     * @throws ListeMatriculesDupliquesUnauthorizedException
     * @throws ListeMatriculesDupliquesInternalServerErrorException
     */
    public function listeMatriculesDupliques(ListeMatriculesDupliquesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeMatriculesDupliques($request, $headerParameters), $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeMatriculesDupliquesDansDomaineResponse|ResponseInterface|null
     *
     * @throws ListeMatriculesDupliquesDansDomaineBadRequestException
     * @throws ListeMatriculesDupliquesDansDomaineUnauthorizedException
     * @throws ListeMatriculesDupliquesDansDomaineInternalServerErrorException
     */
    public function listeMatriculesDupliquesDansDomaine(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeMatriculesDupliquesDansDomaine($headerParameters), $fetch);
    }

    /**
     * @param array                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ExistenceMatriculeResponse|ResponseInterface|null
     *
     * @throws ExistenceMatriculeBadRequestException
     * @throws ExistenceMatriculeUnauthorizedException
     * @throws ExistenceMatriculeInternalServerErrorException
     */
    public function existenceMatricule(DossierMatriculeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExistenceMatricule($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                          $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ExtraListeManifestationsResponse|ResponseInterface|null
     *
     * @throws ExtraListeManifestationsBadRequestException
     * @throws ExtraListeManifestationsUnauthorizedException
     * @throws ExtraListeManifestationsInternalServerErrorException
     */
    public function extraListeManifestations(ExtraListeManifestationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExtraListeManifestations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ExtraCreationManifestationBadRequestException
     * @throws ExtraCreationManifestationUnauthorizedException
     * @throws ExtraCreationManifestationInternalServerErrorException
     */
    public function extraCreationManifestation(ExtraCreationManifestationRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExtraCreationManifestation($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ExtraSalarieVacations|ResponseInterface|null
     *
     * @throws ExtraSalarieAcquisitionVacationsBadRequestException
     * @throws ExtraSalarieAcquisitionVacationsUnauthorizedException
     * @throws ExtraSalarieAcquisitionVacationsInternalServerErrorException
     */
    public function extraSalarieAcquisitionVacations(ExtraSalarieAcquisitionVacationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExtraSalarieAcquisitionVacations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ExtraSalarieAjouterVacationsBadRequestException
     * @throws ExtraSalarieAjouterVacationsUnauthorizedException
     * @throws ExtraSalarieAjouterVacationsInternalServerErrorException
     */
    public function extraSalarieAjouterVacations(ExtraSalarieAjouterVacationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExtraSalarieAjouterVacations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                    $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ExtraSalarieReinitialiserVacationsResponse|ResponseInterface|null
     *
     * @throws ExtraSalarieReinitialiserVacationsBadRequestException
     * @throws ExtraSalarieReinitialiserVacationsUnauthorizedException
     * @throws ExtraSalarieReinitialiserVacationsInternalServerErrorException
     */
    public function extraSalarieReinitialiserVacations(ExtraSalarieReinitialiserVacationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExtraSalarieReinitialiserVacations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ExtraSalarieCalculerBulletinBadRequestException
     * @throws ExtraSalarieCalculerBulletinUnauthorizedException
     * @throws ExtraSalarieCalculerBulletinInternalServerErrorException
     */
    public function extraSalarieCalculerBulletin(ExtraSalarieCalculerBulletinRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ExtraSalarieCalculerBulletin($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SpectacleListeResponse|ResponseInterface|null
     *
     * @throws SpectacleListeBadRequestException
     * @throws SpectacleListeUnauthorizedException
     * @throws SpectacleListeInternalServerErrorException
     */
    public function spectacleListe(SpectacleListeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleListe($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SpectacleCreationBadRequestException
     * @throws SpectacleCreationUnauthorizedException
     * @throws SpectacleCreationInternalServerErrorException
     */
    public function spectacleCreation(SpectacleCreationRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleCreation($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SpectacleSalarieAffectations|ResponseInterface|null
     *
     * @throws SpectacleSalarieAcquisitionAffectationsBadRequestException
     * @throws SpectacleSalarieAcquisitionAffectationsUnauthorizedException
     * @throws SpectacleSalarieAcquisitionAffectationsInternalServerErrorException
     */
    public function spectacleSalarieAcquisitionAffectations(SpectacleSalarieAcquisitionAffectationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleSalarieAcquisitionAffectations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SpectacleSalarieAjouterAffectationsBadRequestException
     * @throws SpectacleSalarieAjouterAffectationsUnauthorizedException
     * @throws SpectacleSalarieAjouterAffectationsInternalServerErrorException
     */
    public function spectacleSalarieAjouterAffectations(SpectacleSalarieAjouterAffectationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleSalarieAjouterAffectations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SpectacleSalarieReinitialiserAffectationsResponse|ResponseInterface|null
     *
     * @throws SpectacleSalarieReinitialiserAffectationsBadRequestException
     * @throws SpectacleSalarieReinitialiserAffectationsUnauthorizedException
     * @throws SpectacleSalarieReinitialiserAffectationsInternalServerErrorException
     */
    public function spectacleSalarieReinitialiserAffectations(SpectacleSalarieReinitialiserAffectationsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleSalarieReinitialiserAffectations($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SpectacleSalarieCalculerBulletinBadRequestException
     * @throws SpectacleSalarieCalculerBulletinUnauthorizedException
     * @throws SpectacleSalarieCalculerBulletinInternalServerErrorException
     */
    public function spectacleSalarieCalculerBulletin(SpectacleSalarieCalculerBulletinRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleSalarieCalculerBulletin($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws SpectacleSalarieCalculerBulletinAsynchroneBadRequestException
     * @throws SpectacleSalarieCalculerBulletinAsynchroneUnauthorizedException
     * @throws SpectacleSalarieCalculerBulletinAsynchroneInternalServerErrorException
     */
    public function spectacleSalarieCalculerBulletinAsynchrone(SpectacleSalarieCalculerBulletinRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SpectacleSalarieCalculerBulletinAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutSpectacleSalarieCalculerBulletinAsynchroneBadRequestException
     * @throws StatutSpectacleSalarieCalculerBulletinAsynchroneUnauthorizedException
     * @throws StatutSpectacleSalarieCalculerBulletinAsynchroneInternalServerErrorException
     */
    public function statutSpectacleSalarieCalculerBulletinAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutSpectacleSalarieCalculerBulletinAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws CreationOrganismeBadRequestException
     * @throws CreationOrganismeUnauthorizedException
     * @throws CreationOrganismeInternalServerErrorException
     */
    public function creationOrganisme(CreationOrganismeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationOrganisme($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererFichiersVirementResponse|ResponseInterface|null
     *
     * @throws RecupererFichiersVirementBadRequestException
     * @throws RecupererFichiersVirementUnauthorizedException
     * @throws RecupererFichiersVirementInternalServerErrorException
     */
    public function recupererFichiersVirement(RecupererFichiersVirementRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererFichiersVirement($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                   $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererFichiersVirementResponse|ResponseInterface|null
     *
     * @throws RecupererFichiersVirementChiffresBadRequestException
     * @throws RecupererFichiersVirementChiffresUnauthorizedException
     * @throws RecupererFichiersVirementChiffresInternalServerErrorException
     */
    public function recupererFichiersVirementChiffres(RecupererFichiersVirementChiffresRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererFichiersVirementChiffres($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                       $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererFichiersVirementResponse|ResponseInterface|null
     *
     * @throws RecupererFichiersVirementHorsBulletinBadRequestException
     * @throws RecupererFichiersVirementHorsBulletinUnauthorizedException
     * @throws RecupererFichiersVirementHorsBulletinInternalServerErrorException
     */
    public function recupererFichiersVirementHorsBulletin(RecupererFichiersVirementHorsBulletinRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererFichiersVirementHorsBulletin($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                               $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererFichiersVirementResponse|ResponseInterface|null
     *
     * @throws RecupererFichiersVirementHorsBulletinChiffresBadRequestException
     * @throws RecupererFichiersVirementHorsBulletinChiffresUnauthorizedException
     * @throws RecupererFichiersVirementHorsBulletinChiffresInternalServerErrorException
     */
    public function recupererFichiersVirementHorsBulletinChiffres(RecupererFichiersVirementHorsBulletinChiffresRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererFichiersVirementHorsBulletinChiffres($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AcquisitionQuestionnaireCCNResponse|ResponseInterface|null
     *
     * @throws AcquisitionQuestionnaireEtablissementCCNBadRequestException
     * @throws AcquisitionQuestionnaireEtablissementCCNUnauthorizedException
     * @throws AcquisitionQuestionnaireEtablissementCCNInternalServerErrorException
     */
    public function acquisitionQuestionnaireEtablissementCCN(AcquisitionQuestionnaireCCNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AcquisitionQuestionnaireEtablissementCCN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AcquisitionQuestionnaireCCNResponse|ResponseInterface|null
     *
     * @throws AcquisitionQuestionnaireEtablissementCCNAvecTexteBadRequestException
     * @throws AcquisitionQuestionnaireEtablissementCCNAvecTexteUnauthorizedException
     * @throws AcquisitionQuestionnaireEtablissementCCNAvecTexteInternalServerErrorException
     */
    public function acquisitionQuestionnaireEtablissementCCNAvecTexte(AcquisitionQuestionnaireCCNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AcquisitionQuestionnaireEtablissementCCNAvecTexte($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AcquisitionQuestionnaireCCNResponse|ResponseInterface|null
     *
     * @throws AcquisitionQuestionnaireSalarieCCNBadRequestException
     * @throws AcquisitionQuestionnaireSalarieCCNUnauthorizedException
     * @throws AcquisitionQuestionnaireSalarieCCNInternalServerErrorException
     */
    public function acquisitionQuestionnaireSalarieCCN(AcquisitionQuestionnaireCCNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AcquisitionQuestionnaireSalarieCCN($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                             $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return AcquisitionQuestionnaireCCNResponse|ResponseInterface|null
     *
     * @throws AcquisitionQuestionnaireSalarieCCNAvecTexteBadRequestException
     * @throws AcquisitionQuestionnaireSalarieCCNAvecTexteUnauthorizedException
     * @throws AcquisitionQuestionnaireSalarieCCNAvecTexteInternalServerErrorException
     */
    public function acquisitionQuestionnaireSalarieCCNAvecTexte(AcquisitionQuestionnaireCCNRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new AcquisitionQuestionnaireSalarieCCNAvecTexte($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererImageResponse|ResponseInterface|null
     *
     * @throws RecupererImageBadRequestException
     * @throws RecupererImageUnauthorizedException
     * @throws RecupererImageInternalServerErrorException
     */
    public function recupererImage(RecupererImageRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererImage($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws RecupererImageAsynchroneBadRequestException
     * @throws RecupererImageAsynchroneUnauthorizedException
     * @throws RecupererImageAsynchroneInternalServerErrorException
     */
    public function recupererImageAsynchrone(RecupererImageRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererImageAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutRecupererImageAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutRecupererImageAsynchroneBadRequestException
     * @throws StatutRecupererImageAsynchroneUnauthorizedException
     * @throws StatutRecupererImageAsynchroneInternalServerErrorException
     */
    public function statutRecupererImageAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutRecupererImageAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return RecupererDuplicatasBulletinsResponse|ResponseInterface|null
     *
     * @throws RecupererDuplicatasBulletinsBadRequestException
     * @throws RecupererDuplicatasBulletinsUnauthorizedException
     * @throws RecupererDuplicatasBulletinsInternalServerErrorException
     */
    public function recupererDuplicatasBulletins(RecupererDuplicatasBulletinsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererDuplicatasBulletins($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                              $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws RecupererDuplicatasBulletinsAsynchroneBadRequestException
     * @throws RecupererDuplicatasBulletinsAsynchroneUnauthorizedException
     * @throws RecupererDuplicatasBulletinsAsynchroneInternalServerErrorException
     */
    public function recupererDuplicatasBulletinsAsynchrone(RecupererDuplicatasBulletinsRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new RecupererDuplicatasBulletinsAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutAsynchroneDocumentResponse|ResponseInterface|null
     *
     * @throws StatutRecupererDuplicatasBulletinsAsynchroneBadRequestException
     * @throws StatutRecupererDuplicatasBulletinsAsynchroneUnauthorizedException
     * @throws StatutRecupererDuplicatasBulletinsAsynchroneInternalServerErrorException
     */
    public function statutRecupererDuplicatasBulletinsAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutRecupererDuplicatasBulletinsAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return CreationSalarieEmploisResponse|ResponseInterface|null
     *
     * @throws CreationSalarieEmploisBadRequestException
     * @throws CreationSalarieEmploisUnauthorizedException
     * @throws CreationSalarieEmploisInternalServerErrorException
     */
    public function creationSalarieEmplois(CreationSalarieEmploisRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationSalarieEmplois($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                        $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return TraitementAsynchroneResponse|ResponseInterface|null
     *
     * @throws CreationSalarieEmploisAsynchroneBadRequestException
     * @throws CreationSalarieEmploisAsynchroneUnauthorizedException
     * @throws CreationSalarieEmploisAsynchroneInternalServerErrorException
     */
    public function creationSalarieEmploisAsynchrone(CreationSalarieEmploisRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new CreationSalarieEmploisAsynchrone($request, $headerParameters), $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     * @var string $guidTache
     *             }
     *
     * @param array $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return StatutCreationSalarieEmploisAsynchroneResponse|ResponseInterface|null
     *
     * @throws StatutCreationSalarieEmploisAsynchroneBadRequestException
     * @throws StatutCreationSalarieEmploisAsynchroneUnauthorizedException
     * @throws StatutCreationSalarieEmploisAsynchroneInternalServerErrorException
     */
    public function statutCreationSalarieEmploisAsynchrone(array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new StatutCreationSalarieEmploisAsynchrone($queryParameters, $headerParameters), $fetch);
    }

    /**
     * @param array                                                     $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeSalarieEmploisResponse|ResponseInterface|null
     *
     * @throws ListeSalarieEmploisBadRequestException
     * @throws ListeSalarieEmploisUnauthorizedException
     * @throws ListeSalarieEmploisInternalServerErrorException
     */
    public function listeSalarieEmplois(ListeSalarieEmploisRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeSalarieEmplois($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieReinitialiserIdentifiantsEmploisBadRequestException
     * @throws SalarieReinitialiserIdentifiantsEmploisUnauthorizedException
     * @throws SalarieReinitialiserIdentifiantsEmploisInternalServerErrorException
     */
    public function salarieReinitialiserIdentifiantsEmplois(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieReinitialiserIdentifiantsEmplois($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeSalarieEmploisExternesResponse|ResponseInterface|null
     *
     * @throws ListeSalarieEmploisExternesBadRequestException
     * @throws ListeSalarieEmploisExternesUnauthorizedException
     * @throws ListeSalarieEmploisExternesInternalServerErrorException
     */
    public function listeSalarieEmploisExternes(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeSalarieEmploisExternes($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws SalarieReinitialiserIdentifiantsEmploisExternesBadRequestException
     * @throws SalarieReinitialiserIdentifiantsEmploisExternesUnauthorizedException
     * @throws SalarieReinitialiserIdentifiantsEmploisExternesInternalServerErrorException
     */
    public function salarieReinitialiserIdentifiantsEmploisExternes(DossierMatriculeSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SalarieReinitialiserIdentifiantsEmploisExternes($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                          $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ModificationChamp|ResponseInterface|null
     *
     * @throws ModificationChampSalarieBadRequestException
     * @throws ModificationChampSalarieUnauthorizedException
     * @throws ModificationChampSalarieInternalServerErrorException
     */
    public function modificationChampSalarie(ModificationChampSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationChampSalarie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationPersonnesLieesBadRequestException
     * @throws ModificationPersonnesLieesUnauthorizedException
     * @throws ModificationPersonnesLieesInternalServerErrorException
     */
    public function modificationPersonnesLiees(ModificationPersonnesLieesRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationPersonnesLiees($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                      $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationHandicapBadRequestException
     * @throws ModificationHandicapUnauthorizedException
     * @throws ModificationHandicapInternalServerErrorException
     */
    public function modificationHandicap(ModificationHandicapRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationHandicap($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                            $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationSalarieProtegeBadRequestException
     * @throws ModificationSalarieProtegeUnauthorizedException
     * @throws ModificationSalarieProtegeInternalServerErrorException
     */
    public function modificationSalarieProtege(ModificationSalarieProtegeRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationSalarieProtege($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationSaisieArretBadRequestException
     * @throws ModificationSaisieArretUnauthorizedException
     * @throws ModificationSaisieArretInternalServerErrorException
     */
    public function modificationSaisieArret(ModificationSaisieArretRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationSaisieArret($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                           $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return LectureQuestionnaireContratComplementaireResponse|ResponseInterface|null
     *
     * @throws LectureQuestionnaireContratComplementaireSalarieBadRequestException
     * @throws LectureQuestionnaireContratComplementaireSalarieUnauthorizedException
     * @throws LectureQuestionnaireContratComplementaireSalarieInternalServerErrorException
     */
    public function lectureQuestionnaireContratComplementaireSalarie(LectureQuestionnaireContratComplementaireRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new LectureQuestionnaireContratComplementaireSalarie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationQuestionnaireContratComplementaireSalarieBadRequestException
     * @throws ModificationQuestionnaireContratComplementaireSalarieUnauthorizedException
     * @throws ModificationQuestionnaireContratComplementaireSalarieInternalServerErrorException
     */
    public function modificationQuestionnaireContratComplementaireSalarie(ModificationQuestionnaireContratComplementaireRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationQuestionnaireContratComplementaireSalarie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                  $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ResponseInterface|null
     *
     * @throws ModificationGrilleHoraireSalarieBadRequestException
     * @throws ModificationGrilleHoraireSalarieUnauthorizedException
     * @throws ModificationGrilleHoraireSalarieInternalServerErrorException
     */
    public function modificationGrilleHoraireSalarie(ModificationGrilleHoraireSalarieRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ModificationGrilleHoraireSalarie($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                                                $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return SiteGenereMotDePasseAlternatifResponse|ResponseInterface|null
     *
     * @throws SiteGenereMotDePasseAlternatifBadRequestException
     * @throws SiteGenereMotDePasseAlternatifUnauthorizedException
     * @throws SiteGenereMotDePasseAlternatifInternalServerErrorException
     */
    public function siteGenereMotDePasseAlternatif(SiteGenereMotDePasseAlternatifRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new SiteGenereMotDePasseAlternatif($request, $headerParameters), $fetch);
    }

    /**
     * @param array                                         $headerParameters {
     *
     * @var string $Ocp-Apim-Subscription-Key
     * @var string $dossiers
     *             }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return ListeVariablesASaisirResponse|ResponseInterface|null
     *
     * @throws ListeVariablesASaisirBadRequestException
     * @throws ListeVariablesASaisirUnauthorizedException
     * @throws ListeVariablesASaisirInternalServerErrorException
     */
    public function listeVariablesASaisir(DossierRequest $request, array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        return $this->executeEndpoint(new ListeVariablesASaisir($request, $headerParameters), $fetch);
    }

    public static function create($httpClient = null, array $additionalPlugins = [], array $additionalNormalizers = [])
    {
        if (null === $httpClient) {
            $httpClient = Psr18ClientDiscovery::find();
            $plugins = [];
            $uri = Psr17FactoryDiscovery::findUrlFactory()->createUri('https://payroll-api.silae.fr/payroll');
            $plugins[] = new AddHostPlugin($uri);
            $plugins[] = new AddPathPlugin($uri);
            if ($additionalPlugins !== []) {
                $plugins = array_merge($plugins, $additionalPlugins);
            }
            $httpClient = new PluginClient($httpClient, $plugins);
        }
        $requestFactory = Psr17FactoryDiscovery::findRequestFactory();
        $streamFactory = Psr17FactoryDiscovery::findStreamFactory();
        $normalizers = [new ArrayDenormalizer(), new JaneObjectNormalizer()];
        if ($additionalNormalizers !== []) {
            $normalizers = array_merge($normalizers, $additionalNormalizers);
        }
        $serializer = new Serializer($normalizers, [new JsonEncoder(new JsonEncode(), new JsonDecode(['json_decode_associative' => true]))]);

        return new static($httpClient, $requestFactory, $serializer, $streamFactory);
    }
}
